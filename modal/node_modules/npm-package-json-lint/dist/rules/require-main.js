var c=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var b=(t,r)=>{for(var n in r)s(t,n,{get:r[n],enumerable:!0})},d=(t,r,n,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of p(r))!y.call(t,o)&&o!==n&&s(t,o,{get:()=>r[o],enumerable:!(e=f(r,o))||e.enumerable});return t};var l=(t,r,n)=>(n=t!=null?c(h(t)):{},d(r||!t||!t.__esModule?s(n,"default",{value:t,enumerable:!0}):n,t)),u=t=>d(s({},"__esModule",{value:!0}),t);var w={};b(w,{lint:()=>O,ruleType:()=>I});module.exports=u(w);var i=l(require("chalk")),m=l(require("log-symbols"));var a=class{constructor(r,n,e,o){this.lintId=r,this.severity=n,this.node=e,this.lintMessage=o}toString(){let r=this.severity==="error"?m.default.error:m.default.warning,n=i.default.cyan.bold(this.lintId),e=i.default.magenta.bold(this.node),o=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${r} ${n} - node: ${e} - ${o}`}};var S="require-main",g="main",v="main is required",I="standard",O=(t,r)=>t.hasOwnProperty(g)?null:new a(S,r,g,v);0&&(module.exports={lint,ruleType});
