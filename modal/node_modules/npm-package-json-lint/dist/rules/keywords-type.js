var f=Object.create;var i=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var h=(r,t)=>{for(var o in t)i(r,o,{get:t[o],enumerable:!0})},g=(r,t,o,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of p(t))!b.call(r,n)&&n!==o&&i(r,n,{get:()=>t[n],enumerable:!(e=d(t,n))||e.enumerable});return r};var l=(r,t,o)=>(o=r!=null?f(u(r)):{},g(t||!r||!r.__esModule?i(o,"default",{value:r,enumerable:!0}):o,r)),P=r=>g(i({},"__esModule",{value:!0}),r);var k={};h(k,{lint:()=>j,ruleType:()=>S});module.exports=P(k);var O=l(require("is-plain-obj")),c=(r,t)=>r.hasOwnProperty(t)?Array.isArray(r[t]):!0;var s=l(require("chalk")),y=l(require("log-symbols"));var a=class{constructor(t,o,e,n){this.lintId=t,this.severity=o,this.node=e,this.lintMessage=n}toString(){let t=this.severity==="error"?y.default.error:y.default.warning,o=s.default.cyan.bold(this.lintId),e=s.default.magenta.bold(this.node),n=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${o} - node: ${e} - ${n}`}};var w="keywords-type",m="keywords",x="Type should be an Array",S="standard",j=(r,t)=>c(r,m)?null:new a(w,t,m,x);0&&(module.exports={lint,ruleType});
