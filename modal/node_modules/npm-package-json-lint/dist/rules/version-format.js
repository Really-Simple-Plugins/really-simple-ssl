var p=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var v=(r,t)=>{for(var o in t)s(r,o,{get:t[o],enumerable:!0})},d=(r,t,o,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of b(t))!h.call(r,n)&&n!==o&&s(r,n,{get:()=>t[n],enumerable:!(e=u(t,n))||e.enumerable});return r};var m=(r,t,o)=>(o=r!=null?p(y(r)):{},d(t||!r||!r.__esModule?s(o,"default",{value:r,enumerable:!0}):o,r)),S=r=>d(s({},"__esModule",{value:!0}),r);var M={};v(M,{lint:()=>w,ruleType:()=>O});module.exports=S(M);var g=m(require("semver")),c=(r,t)=>r.hasOwnProperty(t)?g.default.valid(r[t])!==null:!0;var i=m(require("chalk")),l=m(require("log-symbols"));var a=class{constructor(t,o,e,n){this.lintId=t,this.severity=o,this.node=e,this.lintMessage=n}toString(){let t=this.severity==="error"?l.default.error:l.default.warning,o=i.default.cyan.bold(this.lintId),e=i.default.magenta.bold(this.node),n=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${t} ${o} - node: ${e} - ${n}`}};var x="version-format",f="version",I="Format must be a valid semantic version",O="standard",w=(r,t)=>c(r,f)?null:new a(x,t,f,I);0&&(module.exports={lint,ruleType});
