var y=Object.create;var d=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var x=(e,n)=>{for(var s in n)d(e,s,{get:n[s],enumerable:!0})},h=(e,n,s,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let i of R(n))!A.call(e,i)&&i!==s&&d(e,i,{get:()=>n[i],enumerable:!(t=W(n,i))||t.enumerable});return e};var V=(e,n,s)=>(s=e!=null?y(b(e)):{},h(n||!e||!e.__esModule?d(s,"default",{value:e,enumerable:!0}):s,e)),m=e=>h(d({},"__esModule",{value:!0}),e);var U={};x(U,{lint:()=>j,ruleType:()=>F});module.exports=m(U);var D=require("semver"),O=e=>typeof e=="object"&&e.hasOwnProperty("exceptions");var f=(e,n,s)=>{let t=!1,i=[],a=[];for(let o in e[n]){if(O(s)&&s.exceptions.includes(o))continue;let u=e[n][o];D.validRange(u)&&(u.replace(/\D+/g,"").substr(0,1)==="0"?(t=!0,i.push(o)):a.push(o))}return{hasDependencyWithMajorVersionOfZero:t,dependenciesWithMajorVersionOfZero:i,dependenciesWithoutMajorVersionOfZero:a}};var v=require("jsonc-parser"),g=(e,n)=>e.hasOwnProperty(n);var r=V(require("chalk")),l=V(require("log-symbols"));var c=class{constructor(n,s,t,i){this.lintId=n,this.severity=s,this.node=t,this.lintMessage=i}toString(){let n=this.severity==="error"?l.default.error:l.default.warning,s=r.default.cyan.bold(this.lintId),t=r.default.magenta.bold(this.node),i=this.severity==="error"?r.default.red.bold(this.lintMessage):r.default.yellow(this.lintMessage);return`${n} ${s} - node: ${t} - ${i}`}};var P="prefer-no-version-zero-devDependencies",p="devDependencies",F="optionalObject",j=(e,n,s)=>{let t=f(e,p,s);return g(e,p)&&t.hasDependencyWithMajorVersionOfZero?new c(P,n,p,`You have invalid version 0 dependencies. Please use modules with a major version >= 1. Invalid ${p} include: ${t.dependenciesWithMajorVersionOfZero.join(", ")}`):null};0&&(module.exports={lint,ruleType});
