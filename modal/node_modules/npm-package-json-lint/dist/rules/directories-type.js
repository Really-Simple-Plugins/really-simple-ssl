var d=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var O=(r,t)=>{for(var o in t)i(r,o,{get:t[o],enumerable:!0})},g=(r,t,o,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of u(t))!h.call(r,n)&&n!==o&&i(r,n,{get:()=>t[n],enumerable:!(e=p(t,n))||e.enumerable});return r};var l=(r,t,o)=>(o=r!=null?d(b(r)):{},g(t||!r||!r.__esModule?i(o,"default",{value:r,enumerable:!0}):o,r)),P=r=>g(i({},"__esModule",{value:!0}),r);var v={};O(v,{lint:()=>S,ruleType:()=>w});module.exports=P(v);var m=l(require("is-plain-obj"));var y=(r,t)=>r.hasOwnProperty(t)?(0,m.default)(r[t]):!0;var s=l(require("chalk")),c=l(require("log-symbols"));var a=class{constructor(t,o,e,n){this.lintId=t,this.severity=o,this.node=e,this.lintMessage=n}toString(){let t=this.severity==="error"?c.default.error:c.default.warning,o=s.default.cyan.bold(this.lintId),e=s.default.magenta.bold(this.node),n=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${o} - node: ${e} - ${n}`}};var x="directories-type",f="directories",j="Type should be an Object",w="standard",S=(r,t)=>y(r,f)?null:new a(x,t,f,j);0&&(module.exports={lint,ruleType});
