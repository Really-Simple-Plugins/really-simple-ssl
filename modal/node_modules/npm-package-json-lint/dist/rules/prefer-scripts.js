var f=Object.create;var i=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var b=(t,r)=>{for(var e in r)i(t,e,{get:r[e],enumerable:!0})},l=(t,r,e,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of u(r))!h.call(t,o)&&o!==e&&i(t,o,{get:()=>r[o],enumerable:!(s=g(r,o))||s.enumerable});return t};var p=(t,r,e)=>(e=t!=null?f(y(t)):{},l(r||!t||!t.__esModule?i(e,"default",{value:t,enumerable:!0}):e,t)),x=t=>l(i({},"__esModule",{value:!0}),t);var k={};b(k,{lint:()=>S,minItems:()=>O,ruleType:()=>N});module.exports=x(k);var j=require("jsonc-parser"),m=(t,r)=>t.hasOwnProperty(r);var n=p(require("chalk")),c=p(require("log-symbols"));var a=class{constructor(r,e,s,o){this.lintId=r,this.severity=e,this.node=s,this.lintMessage=o}toString(){let r=this.severity==="error"?c.default.error:c.default.warning,e=n.default.cyan.bold(this.lintId),s=n.default.magenta.bold(this.node),o=this.severity==="error"?n.default.red.bold(this.lintMessage):n.default.yellow(this.lintMessage);return`${r} ${e} - node: ${s} - ${o}`}};var v="prefer-scripts",P="scripts",I="Your package.json scripts object must include:",N="array",O=1,S=(t,r,e)=>{if(m(t,"scripts")){let s=Object.keys(t.scripts);if(!e.every(d=>s.includes(d)))return new a(v,r,P,`${I} ${e.join(", ")}.`)}return null};0&&(module.exports={lint,minItems,ruleType});
