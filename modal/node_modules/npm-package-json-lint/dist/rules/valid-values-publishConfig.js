var h=Object.create;var l=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var O=Object.getPrototypeOf,v=Object.prototype.hasOwnProperty;var x=(r,t)=>{for(var n in t)l(r,n,{get:t[n],enumerable:!0})},f=(r,t,n,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of P(t))!v.call(r,o)&&o!==n&&l(r,o,{get:()=>t[o],enumerable:!(e=b(t,o))||e.enumerable});return r};var u=(r,t,n)=>(n=r!=null?h(O(r)):{},f(t||!r||!r.__esModule?l(n,"default",{value:r,enumerable:!0}):n,r)),w=r=>f(l({},"__esModule",{value:!0}),r);var A={};x(A,{lint:()=>V,minItems:()=>j,ruleType:()=>S});module.exports=w(A);var s=u(require("chalk")),g=u(require("log-symbols"));var a=class{constructor(t,n,e,o){this.lintId=t,this.severity=n,this.node=e,this.lintMessage=o}toString(){let t=this.severity==="error"?g.default.error:g.default.warning,n=s.default.cyan.bold(this.lintId),e=s.default.magenta.bold(this.node),o=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${n} - node: ${e} - ${o}`}};var m=u(require("is-plain-obj"));var c=(r,t)=>r.hasOwnProperty(t)?(0,m.default)(r[t]):!0;var p=(r,t,n,e)=>r.hasOwnProperty(t)?e.includes(n):!0;var y="valid-values-publishConfig",i="publishConfig",S="array",j=1,V=(r,t,n)=>{if(r.hasOwnProperty(i))if(c(r,i)){let e=n.map(d=>JSON.stringify(d)),o=JSON.stringify(r[i]);if(!p(r,i,o,e))return new a(y,t,i,`Invalid value for publishConfig. Current value is ${o}. Value values include: ${e.join(", ")}.`)}else return new a(y,t,i,"publishConfig node has invalid data type");return null};0&&(module.exports={lint,minItems,ruleType});
