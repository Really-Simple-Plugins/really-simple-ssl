var c=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var y=(t,r)=>{for(var n in r)s(t,n,{get:r[n],enumerable:!0})},l=(t,r,n,e)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of p(r))!h.call(t,o)&&o!==n&&s(t,o,{get:()=>r[o],enumerable:!(e=f(r,o))||e.enumerable});return t};var m=(t,r,n)=>(n=t!=null?c(b(t)):{},l(r||!t||!t.__esModule?s(n,"default",{value:t,enumerable:!0}):n,t)),u=t=>l(s({},"__esModule",{value:!0}),t);var w={};y(w,{lint:()=>O,ruleType:()=>I});module.exports=u(w);var i=m(require("chalk")),d=m(require("log-symbols"));var a=class{constructor(r,n,e,o){this.lintId=r,this.severity=n,this.node=e,this.lintMessage=o}toString(){let r=this.severity==="error"?d.default.error:d.default.warning,n=i.default.cyan.bold(this.lintId),e=i.default.magenta.bold(this.node),o=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${r} ${n} - node: ${e} - ${o}`}};var S="require-bin",g="bin",v="bin is required",I="standard",O=(t,r)=>t.hasOwnProperty(g)?null:new a(S,r,g,v);0&&(module.exports={lint,ruleType});
