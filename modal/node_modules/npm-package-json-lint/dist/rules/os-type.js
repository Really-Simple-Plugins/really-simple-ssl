var f=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var h=(r,t)=>{for(var o in t)i(r,o,{get:t[o],enumerable:!0})},y=(r,t,o,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of d(t))!b.call(r,n)&&n!==o&&i(r,n,{get:()=>t[n],enumerable:!(e=p(t,n))||e.enumerable});return r};var l=(r,t,o)=>(o=r!=null?f(u(r)):{},y(t||!r||!r.__esModule?i(o,"default",{value:r,enumerable:!0}):o,r)),P=r=>y(i({},"__esModule",{value:!0}),r);var v={};h(v,{lint:()=>j,ruleType:()=>S});module.exports=P(v);var O=l(require("is-plain-obj")),c=(r,t)=>r.hasOwnProperty(t)?Array.isArray(r[t]):!0;var s=l(require("chalk")),g=l(require("log-symbols"));var a=class{constructor(t,o,e,n){this.lintId=t,this.severity=o,this.node=e,this.lintMessage=n}toString(){let t=this.severity==="error"?g.default.error:g.default.warning,o=s.default.cyan.bold(this.lintId),e=s.default.magenta.bold(this.node),n=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${o} - node: ${e} - ${n}`}};var x="os-type",m="os",w="Type should be an array",S="standard",j=(r,t)=>c(r,m)?null:new a(x,t,m,w);0&&(module.exports={lint,ruleType});
