var g=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var b=(r,t)=>{for(var e in t)s(r,e,{get:t[e],enumerable:!0})},l=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of p(t))!y.call(r,o)&&o!==e&&s(r,o,{get:()=>t[o],enumerable:!(n=f(t,o))||n.enumerable});return r};var m=(r,t,e)=>(e=r!=null?g(h(r)):{},l(t||!r||!r.__esModule?s(e,"default",{value:r,enumerable:!0}):e,r)),u=r=>l(s({},"__esModule",{value:!0}),r);var w={};b(w,{lint:()=>O,ruleType:()=>I});module.exports=u(w);var i=m(require("chalk")),d=m(require("log-symbols"));var a=class{constructor(t,e,n,o){this.lintId=t,this.severity=e,this.node=n,this.lintMessage=o}toString(){let t=this.severity==="error"?d.default.error:d.default.warning,e=i.default.cyan.bold(this.lintId),n=i.default.magenta.bold(this.node),o=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${t} ${e} - node: ${n} - ${o}`}};var S="require-directories",c="directories",v="directories is required",I="standard",O=(r,t)=>r.hasOwnProperty(c)?null:new a(S,t,c,v);0&&(module.exports={lint,ruleType});
