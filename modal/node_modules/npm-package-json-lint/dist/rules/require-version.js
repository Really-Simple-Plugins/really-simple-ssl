var c=Object.create;var i=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var b=(r,t)=>{for(var o in t)i(r,o,{get:t[o],enumerable:!0})},l=(r,t,o,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of p(t))!y.call(r,n)&&n!==o&&i(r,n,{get:()=>t[n],enumerable:!(e=f(t,n))||e.enumerable});return r};var m=(r,t,o)=>(o=r!=null?c(h(r)):{},l(t||!r||!r.__esModule?i(o,"default",{value:r,enumerable:!0}):o,r)),u=r=>l(i({},"__esModule",{value:!0}),r);var w={};b(w,{lint:()=>O,ruleType:()=>I});module.exports=u(w);var s=m(require("chalk")),d=m(require("log-symbols"));var a=class{constructor(t,o,e,n){this.lintId=t,this.severity=o,this.node=e,this.lintMessage=n}toString(){let t=this.severity==="error"?d.default.error:d.default.warning,o=s.default.cyan.bold(this.lintId),e=s.default.magenta.bold(this.node),n=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${o} - node: ${e} - ${n}`}};var v="require-version",g="version",S="version is required",I="standard",O=(r,t)=>r.hasOwnProperty(g)?null:new a(v,t,g,S);0&&(module.exports={lint,ruleType});
