var g=Object.create;var s=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var b=(t,r)=>{for(var e in r)s(t,e,{get:r[e],enumerable:!0})},l=(t,r,e,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of f(r))!y.call(t,n)&&n!==e&&s(t,n,{get:()=>r[n],enumerable:!(o=p(r,n))||o.enumerable});return t};var m=(t,r,e)=>(e=t!=null?g(h(t)):{},l(r||!t||!t.__esModule?s(e,"default",{value:t,enumerable:!0}):e,t)),u=t=>l(s({},"__esModule",{value:!0}),t);var w={};b(w,{lint:()=>O,ruleType:()=>I});module.exports=u(w);var i=m(require("chalk")),d=m(require("log-symbols"));var a=class{constructor(r,e,o,n){this.lintId=r,this.severity=e,this.node=o,this.lintMessage=n}toString(){let r=this.severity==="error"?d.default.error:d.default.warning,e=i.default.cyan.bold(this.lintId),o=i.default.magenta.bold(this.node),n=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${r} ${e} - node: ${o} - ${n}`}};var S="require-optionalDependencies",c="optionalDependencies",v="optionalDependencies is required",I="standard",O=(t,r)=>t.hasOwnProperty(c)?null:new a(S,r,c,v);0&&(module.exports={lint,ruleType});
