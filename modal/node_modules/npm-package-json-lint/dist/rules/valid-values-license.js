var u=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var b=(r,t)=>{for(var e in t)s(r,e,{get:t[e],enumerable:!0})},c=(r,t,e,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of p(t))!h.call(r,n)&&n!==e&&s(r,n,{get:()=>t[n],enumerable:!(o=f(t,n))||o.enumerable});return r};var d=(r,t,e)=>(e=r!=null?u(y(r)):{},c(t||!r||!r.__esModule?s(e,"default",{value:r,enumerable:!0}):e,r)),v=r=>c(s({},"__esModule",{value:!0}),r);var w={};b(w,{lint:()=>P,minItems:()=>O,ruleType:()=>I});module.exports=v(w);var i=d(require("chalk")),m=d(require("log-symbols"));var a=class{constructor(t,e,o,n){this.lintId=t,this.severity=e,this.node=o,this.lintMessage=n}toString(){let t=this.severity==="error"?m.default.error:m.default.warning,e=i.default.cyan.bold(this.lintId),o=i.default.magenta.bold(this.node),n=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${t} ${e} - node: ${o} - ${n}`}};var g=(r,t,e,o)=>r.hasOwnProperty(t)?o.includes(e):!0;var x="valid-values-license",l="license",I="array",O=1,P=(r,t,e)=>g(r,l,r[l],e)?null:new a(x,t,l,`Invalid value for license. Current value is ${r[l]}. Valid values include: ${e.join(", ")}.`);0&&(module.exports={lint,minItems,ruleType});
