var p=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var v=(t,r)=>{for(var o in r)s(t,o,{get:r[o],enumerable:!0})},d=(t,r,o,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let e of f(r))!h.call(t,e)&&e!==o&&s(t,e,{get:()=>r[e],enumerable:!(n=u(r,e))||n.enumerable});return t};var c=(t,r,o)=>(o=t!=null?p(y(t)):{},d(r||!t||!t.__esModule?s(o,"default",{value:t,enumerable:!0}):o,t)),b=t=>d(s({},"__esModule",{value:!0}),t);var w={};v(w,{lint:()=>P,minItems:()=>O,ruleType:()=>I});module.exports=b(w);var i=c(require("chalk")),m=c(require("log-symbols"));var a=class{constructor(r,o,n,e){this.lintId=r,this.severity=o,this.node=n,this.lintMessage=e}toString(){let r=this.severity==="error"?m.default.error:m.default.warning,o=i.default.cyan.bold(this.lintId),n=i.default.magenta.bold(this.node),e=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${r} ${o} - node: ${n} - ${e}`}};var g=(t,r,o,n)=>t.hasOwnProperty(r)?n.includes(o):!0;var x="valid-values-private",l="private",I="array",O=1,P=(t,r,o)=>g(t,l,t[l],o)?null:new a(x,r,l,`Invalid value for private. Current value is ${t[l]}. Valid values include: ${o.join(", ")}.`);0&&(module.exports={lint,minItems,ruleType});
