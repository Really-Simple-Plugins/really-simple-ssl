var p=Object.create;var a=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var u=(r,t)=>{for(var o in t)a(r,o,{get:t[o],enumerable:!0})},c=(r,t,o,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of f(t))!b.call(r,e)&&e!==o&&a(r,e,{get:()=>t[e],enumerable:!(n=y(t,e))||n.enumerable});return r};var l=(r,t,o)=>(o=r!=null?p(h(r)):{},c(t||!r||!r.__esModule?a(o,"default",{value:r,enumerable:!0}):o,r)),w=r=>c(a({},"__esModule",{value:!0}),r);var j={};u(j,{lint:()=>M,ruleType:()=>I});module.exports=w(j);var s=l(require("chalk")),m=l(require("log-symbols"));var i=class{constructor(t,o,n,e){this.lintId=t,this.severity=o,this.node=n,this.lintMessage=e}toString(){let t=this.severity==="error"?m.default.error:m.default.warning,o=s.default.cyan.bold(this.lintId),n=s.default.magenta.bold(this.node),e=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${o} - node: ${n} - ${e}`}};var g="require-repository-directory",d="repository",O="repository is required",S="repository object missing directory property",I="standard",M=(r,t)=>r.hasOwnProperty(d)?r[d].hasOwnProperty("directory")?null:new i(g,t,d,S):new i(g,t,d,O);0&&(module.exports={lint,ruleType});
