var g=Object.create;var i=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var v=(e,t)=>{for(var r in t)i(e,r,{get:t[r],enumerable:!0})},m=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of u(t))!b.call(e,n)&&n!==r&&i(e,n,{get:()=>t[n],enumerable:!(o=h(t,n))||o.enumerable});return e};var f=(e,t,r)=>(r=e!=null?g(y(e)):{},m(t||!e||!e.__esModule?i(r,"default",{value:e,enumerable:!0}):r,e)),x=e=>m(i({},"__esModule",{value:!0}),e);var j={};v(j,{lint:()=>P,ruleType:()=>O});module.exports=x(j);var $=require("jsonc-parser"),l=(e,t)=>e.hasOwnProperty(t);var s=f(require("chalk")),p=f(require("log-symbols"));var d=class{constructor(t,r,o,n){this.lintId=t,this.severity=r,this.node=o,this.lintMessage=n}toString(){let t=this.severity==="error"?p.default.error:p.default.warning,r=s.default.cyan.bold(this.lintId),o=s.default.magenta.bold(this.node),n=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${r} - node: ${o} - ${n}`}};var N="no-repeated-dependencies",O="standard",c="dependencies",a="devDependencies",P=(e,t)=>{if(!l(e,c)||!l(e,a))return null;let r=Object.keys(e[c]),o=Object.keys(e[a]);for(let n of r)if(o.includes(n))return new d(N,t,`${c}|${a}`,`${n} exists in both ${c} and ${a}. Please remove it from one of the dependency lists.`);return null};0&&(module.exports={lint,ruleType});
