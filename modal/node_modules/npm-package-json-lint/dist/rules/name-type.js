var f=Object.create;var i=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var h=(r,t)=>{for(var n in t)i(r,n,{get:t[n],enumerable:!0})},m=(r,t,n,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of d(t))!b.call(r,o)&&o!==n&&i(r,o,{get:()=>t[o],enumerable:!(e=p(t,o))||e.enumerable});return r};var g=(r,t,n)=>(n=r!=null?f(u(r)):{},m(t||!r||!r.__esModule?i(n,"default",{value:r,enumerable:!0}):n,r)),P=r=>m(i({},"__esModule",{value:!0}),r);var v={};h(v,{lint:()=>j,ruleType:()=>w});module.exports=P(v);var O=g(require("is-plain-obj"));var c=(r,t)=>r.hasOwnProperty(t)?typeof r[t]=="string":!0;var s=g(require("chalk")),l=g(require("log-symbols"));var a=class{constructor(t,n,e,o){this.lintId=t,this.severity=n,this.node=e,this.lintMessage=o}toString(){let t=this.severity==="error"?l.default.error:l.default.warning,n=s.default.cyan.bold(this.lintId),e=s.default.magenta.bold(this.node),o=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${n} - node: ${e} - ${o}`}};var x="name-type",y="name",S="Type should be a string",w="standard",j=(r,t)=>c(r,y)?null:new a(x,t,y,S);0&&(module.exports={lint,ruleType});
