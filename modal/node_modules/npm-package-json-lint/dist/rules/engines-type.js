var p=Object.create;var i=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var O=(r,t)=>{for(var n in t)i(r,n,{get:t[n],enumerable:!0})},c=(r,t,n,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of u(t))!h.call(r,o)&&o!==n&&i(r,o,{get:()=>t[o],enumerable:!(e=d(t,o))||e.enumerable});return r};var g=(r,t,n)=>(n=r!=null?p(b(r)):{},c(t||!r||!r.__esModule?i(n,"default",{value:r,enumerable:!0}):n,r)),P=r=>c(i({},"__esModule",{value:!0}),r);var v={};O(v,{lint:()=>S,ruleType:()=>w});module.exports=P(v);var m=g(require("is-plain-obj"));var y=(r,t)=>r.hasOwnProperty(t)?(0,m.default)(r[t]):!0;var s=g(require("chalk")),l=g(require("log-symbols"));var a=class{constructor(t,n,e,o){this.lintId=t,this.severity=n,this.node=e,this.lintMessage=o}toString(){let t=this.severity==="error"?l.default.error:l.default.warning,n=s.default.cyan.bold(this.lintId),e=s.default.magenta.bold(this.node),o=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${n} - node: ${e} - ${o}`}};var x="engines-type",f="engines",j="Type should be an Object",w="standard",S=(r,t)=>y(r,f)?null:new a(x,t,f,j);0&&(module.exports={lint,ruleType});
