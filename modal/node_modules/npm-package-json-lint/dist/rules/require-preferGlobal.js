var c=Object.create;var i=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var y=(r,t)=>{for(var e in t)i(r,e,{get:t[e],enumerable:!0})},d=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of p(t))!h.call(r,o)&&o!==e&&i(r,o,{get:()=>t[o],enumerable:!(n=f(t,o))||n.enumerable});return r};var m=(r,t,e)=>(e=r!=null?c(b(r)):{},d(t||!r||!r.__esModule?i(e,"default",{value:r,enumerable:!0}):e,r)),u=r=>d(i({},"__esModule",{value:!0}),r);var w={};y(w,{lint:()=>O,ruleType:()=>I});module.exports=u(w);var s=m(require("chalk")),l=m(require("log-symbols"));var a=class{constructor(t,e,n,o){this.lintId=t,this.severity=e,this.node=n,this.lintMessage=o}toString(){let t=this.severity==="error"?l.default.error:l.default.warning,e=s.default.cyan.bold(this.lintId),n=s.default.magenta.bold(this.node),o=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${e} - node: ${n} - ${o}`}};var S="require-preferGlobal",g="preferGlobal",v="preferGlobal is required",I="standard",O=(r,t)=>r.hasOwnProperty(g)?null:new a(S,t,g,v);0&&(module.exports={lint,ruleType});
