var u=Object.create;var c=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,O=Object.prototype.hasOwnProperty;var P=(r,t)=>{for(var n in t)c(r,n,{get:t[n],enumerable:!0})},y=(r,t,n,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of h(t))!O.call(r,s)&&s!==n&&c(r,s,{get:()=>t[s],enumerable:!(o=d(t,s))||o.enumerable});return r};var l=(r,t,n)=>(n=r!=null?u(b(r)):{},y(t||!r||!r.__esModule?c(n,"default",{value:r,enumerable:!0}):n,r)),w=r=>y(c({},"__esModule",{value:!0}),r);var v={};P(v,{lint:()=>S,ruleType:()=>j});module.exports=w(v);var f=l(require("is-plain-obj"));var g=(r,t)=>r.hasOwnProperty(t)?(0,f.default)(r[t]):!0;var e=l(require("chalk")),p=l(require("log-symbols"));var i=class{constructor(t,n,o,s){this.lintId=t,this.severity=n,this.node=o,this.lintMessage=s}toString(){let t=this.severity==="error"?p.default.error:p.default.warning,n=e.default.cyan.bold(this.lintId),o=e.default.magenta.bold(this.node),s=this.severity==="error"?e.default.red.bold(this.lintMessage):e.default.yellow(this.lintMessage);return`${t} ${n} - node: ${o} - ${s}`}};var m="scripts-type",a="scripts",x="Type should be an Object",j="standard",S=(r,t)=>{if(!g(r,a))return new i(m,t,a,x);if(r.hasOwnProperty(a)){let n=r[a];for(let o in n)if(n.hasOwnProperty(o)&&typeof n[o]!="string")return new i(m,t,a,`script, ${o}, in the "scripts" property is not a string.`)}return null};0&&(module.exports={lint,ruleType});
