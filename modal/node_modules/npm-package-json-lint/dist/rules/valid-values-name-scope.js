var p=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var v=(t,r)=>{for(var e in r)s(t,e,{get:r[e],enumerable:!0})},c=(t,r,e,o)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of f(r))!h.call(t,n)&&n!==e&&s(t,n,{get:()=>r[n],enumerable:!(o=u(r,n))||o.enumerable});return t};var d=(t,r,e)=>(e=t!=null?p(y(t)):{},c(r||!t||!t.__esModule?s(e,"default",{value:t,enumerable:!0}):e,t)),b=t=>c(s({},"__esModule",{value:!0}),t);var P={};v(P,{lint:()=>O,minItems:()=>I,ruleType:()=>w});module.exports=b(P);var i=d(require("chalk")),m=d(require("log-symbols"));var a=class{constructor(r,e,o,n){this.lintId=r,this.severity=e,this.node=o,this.lintMessage=n}toString(){let r=this.severity==="error"?m.default.error:m.default.warning,e=i.default.cyan.bold(this.lintId),o=i.default.magenta.bold(this.node),n=this.severity==="error"?i.default.red.bold(this.lintMessage):i.default.yellow(this.lintMessage);return`${r} ${e} - node: ${o} - ${n}`}};var g=(t,r,e,o)=>t.hasOwnProperty(r)?o.some(n=>n.test(e)):!0;var x="valid-values-name-scope",l="name",w="array",I=1,O=(t,r,e)=>{let o=e.map(n=>new RegExp(`^${n}/`));return g(t,l,t[l],o)?null:new a(x,r,l,`Invalid value for name scope. Current value is ${t[l]}. Valid values include: ${e.join(", ")}.`)};0&&(module.exports={lint,minItems,ruleType});
