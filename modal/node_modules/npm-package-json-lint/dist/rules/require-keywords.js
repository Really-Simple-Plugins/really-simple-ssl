var c=Object.create;var i=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var b=(r,t)=>{for(var o in t)i(r,o,{get:t[o],enumerable:!0})},l=(r,t,o,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of y(t))!h.call(r,e)&&e!==o&&i(r,e,{get:()=>t[e],enumerable:!(n=f(t,e))||n.enumerable});return r};var m=(r,t,o)=>(o=r!=null?c(p(r)):{},l(t||!r||!r.__esModule?i(o,"default",{value:r,enumerable:!0}):o,r)),u=r=>l(i({},"__esModule",{value:!0}),r);var I={};b(I,{lint:()=>v,ruleType:()=>k});module.exports=u(I);var s=m(require("chalk")),d=m(require("log-symbols"));var a=class{constructor(t,o,n,e){this.lintId=t,this.severity=o,this.node=n,this.lintMessage=e}toString(){let t=this.severity==="error"?d.default.error:d.default.warning,o=s.default.cyan.bold(this.lintId),n=s.default.magenta.bold(this.node),e=this.severity==="error"?s.default.red.bold(this.lintMessage):s.default.yellow(this.lintMessage);return`${t} ${o} - node: ${n} - ${e}`}};var w="require-keywords",g="keywords",S="keywords is required",k="standard",v=(r,t)=>r.hasOwnProperty(g)?null:new a(w,t,g,S);0&&(module.exports={lint,ruleType});
