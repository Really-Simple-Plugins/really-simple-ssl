{"version":3,"names":["__unstableEscapeGreaterThan","REGEXP_INVALID_ATTRIBUTE_NAME","escapeAmpersand","value","replace","escapeQuotationMark","escapeLessThan","escapeAttribute","escapeHTML","escapeEditableHTML","isValidAttributeName","name","test"],"sources":["@wordpress/escape-html/src/index.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport __unstableEscapeGreaterThan from './escape-greater';\n\n/**\n * Regular expression matching invalid attribute names.\n *\n * \"Attribute names must consist of one or more characters other than controls,\n * U+0020 SPACE, U+0022 (\"), U+0027 ('), U+003E (>), U+002F (/), U+003D (=),\n * and noncharacters.\"\n *\n * @see https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n *\n * @type {RegExp}\n */\nconst REGEXP_INVALID_ATTRIBUTE_NAME = /[\\u007F-\\u009F \"'>/=\"\\uFDD0-\\uFDEF]/;\n\n/**\n * Returns a string with ampersands escaped. Note that this is an imperfect\n * implementation, where only ampersands which do not appear as a pattern of\n * named, decimal, or hexadecimal character references are escaped. Invalid\n * named references (i.e. ambiguous ampersand) are still permitted.\n *\n * @see https://w3c.github.io/html/syntax.html#character-references\n * @see https://w3c.github.io/html/syntax.html#ambiguous-ampersand\n * @see https://w3c.github.io/html/syntax.html#named-character-references\n *\n * @param {string} value Original string.\n *\n * @return {string} Escaped string.\n */\nexport function escapeAmpersand( value ) {\n\treturn value.replace( /&(?!([a-z0-9]+|#[0-9]+|#x[a-f0-9]+);)/gi, '&amp;' );\n}\n\n/**\n * Returns a string with quotation marks replaced.\n *\n * @param {string} value Original string.\n *\n * @return {string} Escaped string.\n */\nexport function escapeQuotationMark( value ) {\n\treturn value.replace( /\"/g, '&quot;' );\n}\n\n/**\n * Returns a string with less-than sign replaced.\n *\n * @param {string} value Original string.\n *\n * @return {string} Escaped string.\n */\nexport function escapeLessThan( value ) {\n\treturn value.replace( /</g, '&lt;' );\n}\n\n/**\n * Returns an escaped attribute value.\n *\n * @see https://w3c.github.io/html/syntax.html#elements-attributes\n *\n * \"[...] the text cannot contain an ambiguous ampersand [...] must not contain\n * any literal U+0022 QUOTATION MARK characters (\")\"\n *\n * Note we also escape the greater than symbol, as this is used by wptexturize to\n * split HTML strings. This is a WordPress specific fix\n *\n * Note that if a resolution for Trac#45387 comes to fruition, it is no longer\n * necessary for `__unstableEscapeGreaterThan` to be used.\n *\n * See: https://core.trac.wordpress.org/ticket/45387\n *\n * @param {string} value Attribute value.\n *\n * @return {string} Escaped attribute value.\n */\nexport function escapeAttribute( value ) {\n\treturn __unstableEscapeGreaterThan(\n\t\tescapeQuotationMark( escapeAmpersand( value ) )\n\t);\n}\n\n/**\n * Returns an escaped HTML element value.\n *\n * @see https://w3c.github.io/html/syntax.html#writing-html-documents-elements\n *\n * \"the text must not contain the character U+003C LESS-THAN SIGN (<) or an\n * ambiguous ampersand.\"\n *\n * @param {string} value Element value.\n *\n * @return {string} Escaped HTML element value.\n */\nexport function escapeHTML( value ) {\n\treturn escapeLessThan( escapeAmpersand( value ) );\n}\n\n/**\n * Returns an escaped Editable HTML element value. This is different from\n * `escapeHTML`, because for editable HTML, ALL ampersands must be escaped in\n * order to render the content correctly on the page.\n *\n * @param {string} value Element value.\n *\n * @return {string} Escaped HTML element value.\n */\nexport function escapeEditableHTML( value ) {\n\treturn escapeLessThan( value.replace( /&/g, '&amp;' ) );\n}\n\n/**\n * Returns true if the given attribute name is valid, or false otherwise.\n *\n * @param {string} name Attribute name to test.\n *\n * @return {boolean} Whether attribute is valid.\n */\nexport function isValidAttributeName( name ) {\n\treturn ! REGEXP_INVALID_ATTRIBUTE_NAME.test( name );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,2BAA2B,MAAM,kBAAkB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,6BAA6B,GAAG,qCAAqC;;AAE3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAAEC,KAAK,EAAG;EACxC,OAAOA,KAAK,CAACC,OAAO,CAAE,yCAAyC,EAAE,OAAQ,CAAC;AAC3E;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAAEF,KAAK,EAAG;EAC5C,OAAOA,KAAK,CAACC,OAAO,CAAE,IAAI,EAAE,QAAS,CAAC;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,cAAcA,CAAEH,KAAK,EAAG;EACvC,OAAOA,KAAK,CAACC,OAAO,CAAE,IAAI,EAAE,MAAO,CAAC;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,eAAeA,CAAEJ,KAAK,EAAG;EACxC,OAAOH,2BAA2B,CACjCK,mBAAmB,CAAEH,eAAe,CAAEC,KAAM,CAAE,CAC/C,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASK,UAAUA,CAAEL,KAAK,EAAG;EACnC,OAAOG,cAAc,CAAEJ,eAAe,CAAEC,KAAM,CAAE,CAAC;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,kBAAkBA,CAAEN,KAAK,EAAG;EAC3C,OAAOG,cAAc,CAAEH,KAAK,CAACC,OAAO,CAAE,IAAI,EAAE,OAAQ,CAAE,CAAC;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,oBAAoBA,CAAEC,IAAI,EAAG;EAC5C,OAAO,CAAEV,6BAA6B,CAACW,IAAI,CAAED,IAAK,CAAC;AACpD"}