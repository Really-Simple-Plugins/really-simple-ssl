{"version":3,"file":"src_Settings_Field_js.js","mappings":"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","sources":["webpack://really-simple-ssl/./src/LetsEncrypt/Activate.js","webpack://really-simple-ssl/./src/LetsEncrypt/Directories.js","webpack://really-simple-ssl/./src/LetsEncrypt/DnsVerification.js","webpack://really-simple-ssl/./src/LetsEncrypt/Generation.js","webpack://really-simple-ssl/./src/LetsEncrypt/Installation.js","webpack://really-simple-ssl/./src/LetsEncrypt/LetsEncrypt.js","webpack://really-simple-ssl/./src/Modal/ModalControl.js","webpack://really-simple-ssl/./src/Onboarding/Onboarding.js","webpack://really-simple-ssl/./src/Settings/Button.js","webpack://really-simple-ssl/./src/Settings/CheckboxControl.js","webpack://really-simple-ssl/./src/Settings/Field.js","webpack://really-simple-ssl/./src/Settings/Host.js","webpack://really-simple-ssl/./src/Settings/LearningMode/ChangeStatus.js","webpack://really-simple-ssl/./src/Settings/LearningMode/Delete.js","webpack://really-simple-ssl/./src/Settings/LearningMode/LearningMode.js","webpack://really-simple-ssl/./src/Settings/LearningMode/LearningModeData.js","webpack://really-simple-ssl/./src/Settings/MixedContentScan/MixedContentData.js","webpack://really-simple-ssl/./src/Settings/MixedContentScan/MixedContentScan.js","webpack://really-simple-ssl/./src/Settings/Password.js","webpack://really-simple-ssl/./src/Settings/PermissionsPolicy.js","webpack://really-simple-ssl/./src/Settings/PostDropDown.js","webpack://really-simple-ssl/./src/Settings/RiskConfiguration/NotificationTester.js","webpack://really-simple-ssl/./src/Settings/RiskConfiguration/RiskData.js","webpack://really-simple-ssl/./src/Settings/SelectControl.js","webpack://really-simple-ssl/./src/Settings/Support.js"],"sourcesContent":["import Onboarding from \"../Onboarding/Onboarding\";\n\nconst Activate = () => {\n    return (\n        <div className=\"rsssl-lets-encrypt-tests\">\n            <Onboarding/>\n         </div>\n    )\n}\n\nexport default Activate;","import {__} from '@wordpress/i18n';\nimport * as rsssl_api from \"../utils/api\";\nimport {dispatch,} from '@wordpress/data';\nimport {useUpdateEffect} from 'react-use';\nimport sleeper from \"../utils/sleeper\";\nimport Hyperlink from \"../utils/Hyperlink\";\n\nimport {\n    Button,\n} from '@wordpress/components';\nimport useLetsEncryptData from \"./letsEncryptData\";\nimport useFields from \"../Settings/FieldsData\";\n\nconst Directories = (props) => {\n    const {addHelpNotice} = useFields();\n\n    let action = props.action;\n\n    useUpdateEffect(() => {\n        if ((action && action.action === 'challenge_directory_reachable' && action.status === 'error')) {\n            addHelpNotice(\n                props.field.id,\n                'default',\n                __(\"The challenge directory is used to verify the domain ownership.\", \"really-simple-ssl\"),\n            );\n        }\n\n        if ((action && action.action === 'check_key_directory' && action.status === 'error')) {\n            addHelpNotice(\n                props.field.id,\n                'default',\n                __(\"The key directory is needed to store the generated keys.\", \"really-simple-ssl\") + ' ' + __(\"By placing it outside the root folder, it is not publicly accessible.\", \"really-simple-ssl\"),\n            );\n        }\n\n        if ((action && action.action === 'check_certs_directory' && action.status === 'error')) {\n            addHelpNotice(\n                props.field.id,\n                'default',\n                __(\"The certificate will get stored in this directory.\", \"really-simple-ssl\") + ' ' + __(\"By placing it outside the root folder, it is not publicly accessible.\", \"really-simple-ssl\"),\n            );\n        }\n    });\n\n\n    if ( !action ) {\n        return (<></>);\n    }\n\n    const handleSwitchToDNS = () => {\n        props.updateField('verification_type', 'dns');\n        return rsssl_api.runLetsEncryptTest('update_verification_type', 'dns').then((response) => {\n            props.selectMenu('le-dns-verification');\n            const notice = dispatch('core/notices').createNotice(\n                'success',\n                __('Switched to DNS', 'really-simple-ssl'),\n                {\n                    __unstableHTML: true,\n                    id: 'rsssl_switched_to_dns',\n                    type: 'snackbar',\n                    isDismissible: true,\n                }\n            ).then(sleeper(3000)).then((response) => {\n                dispatch('core/notices').removeNotice('rsssl_switched_to_dns');\n            });\n        });\n    }\n\n    return (\n        <div className=\"rsssl-test-results\">\n            {action.status === 'error' && <h4>{__(\"Next step\", \"really-simple-ssl\")}</h4>}\n\n            {(action.status === 'error' && action.action === 'challenge_directory_reachable') &&\n                <div>\n                    <p>\n                        {__(\"If the challenge directory cannot be created, or is not reachable, you can either remove the server limitation, or change to DNS verification.\", \"really-simple-ssl\")}\n                    </p>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => handleSwitchToDNS()}\n                    >\n                        {__('Switch to DNS verification', 'really-simple-ssl')}\n                    </Button>\n                </div>\n            }\n            {action.status !== 'error' && rsssl_settings.hosting_dashboard === 'cpanel' &&\n                <><p>\n                    <Hyperlink target=\"_blank\"\n                               text={__(\"If you also want to secure subdomains like mail.domain.com, cpanel.domain.com, you have to use the %sDNS%s challenge.\", \"really-simple-ssl\")}\n                               url=\"https://really-simple-ssl.com/lets-encrypt-authorization-with-dns\"/>\n                    &nbsp;{__(\"Please note that auto-renewal with a DNS challenge might not be possible.\", \"really-simple-ssl\")}\n                </p>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => handleSwitchToDNS()}\n                    >{__('Switch to DNS verification', 'really-simple-ssl')}</Button></>\n            }\n            {(action.status === 'error' && action.action === 'check_challenge_directory') &&\n                <div>\n                    <h4>\n                        {__(\"Create a challenge directory\", \"really-simple-ssl\")}\n                    </h4>\n                    <p>\n                        {__(\"Navigate in FTP or File Manager to the root of your WordPress installation:\", \"really-simple-ssl\")}\n                    </p>\n                    <ul>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Create a folder called “.well-known”', 'really-simple-ssl')}\n                        </li>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Inside the folder called “.well-known” create a new folder called “acme-challenge”, with 644 writing permissions.', 'really-simple-ssl')}\n                        </li>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Click the refresh button.', 'really-simple-ssl')}\n                        </li>\n                    </ul>\n                    <h4>\n                        {__(\"Or you can switch to DNS verification\", \"really-simple-ssl\")}\n                    </h4>\n                    <p>{__(\"If the challenge directory cannot be created, you can either remove the server limitation, or change to DNS verification.\", \"really-simple-ssl\")}</p>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => handleSwitchToDNS()}\n                    >\n                        {__('Switch to DNS verification', 'really-simple-ssl')}\n                    </Button>\n                </div>\n            }\n\n            {(action.status === 'error' && action.action === 'check_key_directory') &&\n                <div>\n                    <h4>\n                        {__(\"Create a key directory\", \"really-simple-ssl\")}\n                    </h4>\n                    <p>\n                        {__(\"Navigate in FTP or File Manager to one level above the root of your WordPress installation:\", \"really-simple-ssl\")}\n                    </p>\n                    <ul>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Create a folder called “ssl”', 'really-simple-ssl')}\n                        </li>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Inside the folder called “ssl” create a new folder called “keys”, with 644 writing permissions.', 'really-simple-ssl')}\n                        </li>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Click the refresh button.', 'really-simple-ssl')}\n                        </li>\n                    </ul>\n                </div>\n            }\n\n            {(action.status === 'error' && action.action === 'check_certs_directory') &&\n                <div>\n                    <h4>\n                        {__(\"Create a certs directory\", \"really-simple-ssl\")}\n                    </h4>\n                    <p>\n                        {__(\"Navigate in FTP or File Manager to one level above the root of your WordPress installation:\", \"really-simple-ssl\")}\n                    </p>\n                    <ul>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Create a folder called “ssl”', 'really-simple-ssl')}\n                        </li>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Inside the folder called “ssl” create a new folder called “certs”, with 644 writing permissions.', 'really-simple-ssl')}\n                        </li>\n                        <li className=\"rsssl-tooltip-icon dashicons-before rsssl-icon arrow-right-alt2 dashicons-arrow-right-alt2\">\n                            {__('Click the refresh button.', 'really-simple-ssl')}\n                        </li>\n                    </ul>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Directories;","import {useState, useEffect} from \"@wordpress/element\";\nimport { __ } from '@wordpress/i18n';\nimport Hyperlink from \"../utils/Hyperlink\";\nimport {useUpdateEffect} from 'react-use';\nimport {\n    Button,\n} from '@wordpress/components';\nimport useFields from \"../Settings/FieldsData\";\nimport useMenu from \"../Menu/MenuData\";\n\nconst DnsVerification = (props) => {\n    const {fields, addHelpNotice, updateField, setChangedField, saveFields, fetchFieldsData, getFieldValue} = useFields();\n    const {selectedSubMenuItem} = useMenu();\n    const [tokens, setTokens] = useState(false);\n    let action = props.action;\n\n    // useEffect(() => {\n    //\n    // }, [fields])\n     useUpdateEffect(()=> {\n        if (action && action.action==='challenge_directory_reachable' && action.status==='error') {\n            addHelpNotice(\n                props.field.id,\n                 'default',\n                __(\"The challenge directory is used to verify the domain ownership.\", \"really-simple-ssl\"),\n            );\n        }\n         let newTokens = action ? action.output : false;\n         if ( typeof (newTokens) === \"undefined\" || newTokens.length === 0 ) {\n             newTokens = false;\n         }\n         if ( newTokens ) {\n             setTokens(newTokens);\n         }\n     });\n\n    const handleSwitchToDir = async () => {\n        updateField('verification_type', 'dir');\n        setChangedField('verification_type', 'dir');\n        await saveFields(true, true);\n        await fetchFieldsData(selectedSubMenuItem);\n    }\n    let verificationType = getFieldValue('verification_type');\n    if (verificationType==='dir') {\n        return (<></>);\n    }\n\n    return (\n        <>\n           { tokens && tokens.length>0 &&\n                <div className=\"rsssl-test-results\">\n                    <h4>{__(\"Next step\", \"really-simple-ssl\")}</h4>\n                    <p>{__(\"Add the following token as text record to your DNS records. We recommend to use a short TTL during installation, in case you need to change it.\", \"really-simple-ssl\")}\n                        <Hyperlink target=\"_blank\" text={__(\"Read more\", \"really-simple-ssl\")}\n                                   url=\"https://really-simple-ssl.com/how-to-add-a-txt-record-to-dns\"/>\n                    </p>\n                    <div  className=\"rsssl-dns-text-records\">\n                        <div>\n                            <div className=\"rsssl-dns-domain\">@/{__(\"domain\", \"really-simple-ssl\")}</div>\n                            <div className=\"rsssl-dns-field\">{__(\"Value\", \"really-simple-ssl\")}</div>\n                        </div>\n                        { tokens.map((tokenData, i) =>\n                            <div>\n                                <div className=\"rsssl-dns-\">_acme-challenge.{tokenData.domain}</div>\n                                <div className=\"rsssl-dns-field rsssl-selectable\">{tokenData.token}</div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            }\n\n            <div className=\"rsssl-test-results\">\n                <p>{__(\"DNS verification active. You can switch back to directory verification here.\",\"really-simple-ssl\")}</p>\n                <Button\n                    variant=\"secondary\"\n                    onClick={() => handleSwitchToDir()}\n                >{ __( 'Switch to directory verification', 'really-simple-ssl' ) }</Button>\n            </div>\n\n        </>\n    )\n}\n\nexport default DnsVerification;","import { __ } from '@wordpress/i18n';\nimport * as rsssl_api from \"../utils/api\";\nimport {dispatch,} from '@wordpress/data';\nimport sleeper from \"../utils/sleeper\";\nimport Hyperlink from \"../utils/Hyperlink\";\n\nimport {\n    Button,\n} from '@wordpress/components';\nimport useFields from \"../Settings/FieldsData\";\n\nconst Generation = (props) => {\n    let action = props.action;\n\n    if (!action) {\n        return (<></>);\n    }\n\n    const handleSkipDNS = () => {\n        return rsssl_api.runLetsEncryptTest('skip_dns_check').then( ( response ) => {\n            props.restartTests();\n            const notice = dispatch('core/notices').createNotice(\n                'success',\n                __( 'Skip DNS verification', 'really-simple-ssl' ),\n                {\n                    __unstableHTML: true,\n                    id: 'rsssl_skip_dns',\n                    type: 'snackbar',\n                    isDismissible: true,\n                }\n            ).then(sleeper(3000)).then(( response ) => {\n                dispatch('core/notices').removeNotice('rsssl_skip_dns');\n            });\n        });\n    }\n\n    return (\n        <div className=\"rsssl-test-results\">\n            { (action.status === 'error' && action.action==='verify_dns' ) &&\n                <>\n                    <p>{ __(\"We could not check the DNS records. If you just added the record, please check in a few minutes.\",\"really-simple-ssl\")}&nbsp;\n                                    <Hyperlink target=\"_blank\" text={__(\"You can manually check the DNS records in an %sonline tool%s.\",\"really-simple-ssl\")}\n                                    url=\"https://mxtoolbox.com/SuperTool.aspx\"/>\n                        { __(\"If you're sure it's set correctly, you can click the button to skip the DNS check.\",\"really-simple-ssl\")}&nbsp;\n                    </p>\n                    <Button\n                        variant=\"secondary\"\n                        onClick={() => handleSkipDNS()}\n                        >\n                        { __( 'Skip DNS check', 'really-simple-ssl' ) }\n                    </Button>\n                </>\n            }\n        </div>\n    );\n}\n\nexport default Generation;","import {useState, useEffect} from \"@wordpress/element\";\nimport { __ } from '@wordpress/i18n';\nimport * as rsssl_api from \"../utils/api\";\nimport {dispatch,} from '@wordpress/data';\nimport {useUpdateEffect} from 'react-use';\nimport sleeper from \"../utils/sleeper\";\nimport useFields from \"../Settings/FieldsData\";\n\nconst Installation = (props) => {\n    const {addHelpNotice} = useFields();\n\n    const [installationData, setInstallationData] = useState(false);\n    let action = props.action;\n\n     useUpdateEffect(()=> {\n        if ((action && action.status==='warning' && installationData && installationData.generated_by_rsssl )) {\n            addHelpNotice(\n                props.field.id,\n                 'default',\n                 __(\"This is the certificate, which you need to install in your hosting dashboard.\", \"really-simple-ssl\"),\n                 __(\"Certificate (CRT)\", \"really-simple-ssl\")\n              );\n\n              addHelpNotice(\n                props.field.id,\n                 'default',\n                 __(\"The private key can be uploaded or pasted in the appropriate field on your hosting dashboard.\", \"really-simple-ssl\"),\n                 __(\"Private Key (KEY)\", \"really-simple-ssl\")\n              );\n\n              addHelpNotice(\n                props.field.id,\n                 'default',\n                 __(\"The CA Bundle will sometimes be automatically detected. If not, you can use this file.\", \"really-simple-ssl\"),\n                 __(\"Certificate Authority Bundle (CABUNDLE)\", \"really-simple-ssl\")\n              );\n        }\n\n        if ( action && (action.status==='error' || action.status === 'warning') ) {\n            rsssl_api.runLetsEncryptTest('installation_data').then( ( response ) => {\n                if (response) {\n                    setInstallationData(response.output);\n                }\n            });\n        }\n\n     });\n\n\n    const handleCopyAction = (type) => {\n        let success;\n        let data = document.querySelector('.rsssl-'+type).innerText;\n\n        const el = document.createElement('textarea');\n        el.value = data;\t//str is your string to copy\n        document.body.appendChild(el);\n        el.select();\n        try {\n            success = document.execCommand(\"copy\");\n        } catch (e) {\n            success = false;\n        }\n        document.body.removeChild(el);\n        const notice = dispatch('core/notices').createNotice(\n            'success',\n            __( 'Copied!', 'really-simple-ssl' ),\n            {\n                __unstableHTML: true,\n                id: 'rsssl_copied_data',\n                type: 'snackbar',\n                isDismissible: true,\n            }\n        ).then(sleeper(3000)).then(( response ) => {\n            dispatch('core/notices').removeNotice('rsssl_copied_data');\n        });\n    }\n\n    if ( !action ) {\n        return (<></>);\n    }\n\n\n    if (!installationData) {\n        return (<></>);\n    }\n    return (\n        <div className=\"rsssl-test-results\">\n            { !installationData.generated_by_rsssl && <>{__(\"The certificate is not generated by Really Simple SSL, so there are no installation files here\",\"really-simple-ssl\")}</>}\n\n            { installationData.generated_by_rsssl && action.status === 'warning' &&\n                <>\n                <h4>{ __(\"Next step\", \"really-simple-ssl\") }</h4>\n                    <div className=\"rsssl-template-intro\">{ __(\"Install your certificate.\", \"really-simple-ssl\")}</div>\n                    <h4>{ __(\"Certificate (CRT)\", \"really-simple-ssl\") }</h4>\n                    <div className=\"rsssl-certificate-data rsssl-certificate\" id=\"rsssl-certificate\">{installationData.certificate_content}</div>\n                    <a href={installationData.download_url+\"&type=certificate\"} className=\"button button-secondary\">{ __(\"Download\", \"really-simple-ssl\")}</a>\n                    <button type=\"button\" onClick={(e) => handleCopyAction('certificate')} className=\"button button-primary\">{ __(\"Copy content\", \"really-simple-ssl\")}</button>\n\n                    <h4>{ __(\"Private Key (KEY)\", \"really-simple-ssl\") }</h4>\n                    <div className=\"rsssl-certificate-data rsssl-key\" id=\"rsssl-key\">{installationData.key_content}</div>\n                    <a href={installationData.download_url+\"&type=private_key\"} className=\"button button-secondary\">{ __(\"Download\", \"really-simple-ssl\")}</a>\n                    <button type=\"button\" className=\"button button-primary\" onClick={(e) => handleCopyAction('key')} >{ __(\"Copy content\", \"really-simple-ssl\")}</button>\n                    <h4>{ __(\"Certificate Authority Bundle (CABUNDLE)\", \"really-simple-ssl\") }</h4>\n                    <div className=\"rsssl-certificate-data rsssl-cabundle\" id=\"rsssl-cabundle\">{installationData.ca_bundle_content}</div>\n                    <a href={installationData.download_url+\"&type=intermediate\"} className=\"button button-secondary\">{ __(\"Download\", \"really-simple-ssl\")}</a>\n                    <button type=\"button\" className=\"button button-primary\" onClick={(e) => handleCopyAction('cabundle')} >{ __(\"Copy content\", \"really-simple-ssl\")}</button>\n                </>\n             }\n         </div>\n    )\n}\n\nexport default Installation;","import {useEffect, useRef} from \"@wordpress/element\";\nimport * as rsssl_api from \"../utils/api\";\nimport sleeper from \"../utils/sleeper\";\nimport Directories from \"./Directories\";\nimport DnsVerification from \"./DnsVerification\";\nimport Generation from \"./Generation\";\nimport Activate from \"./Activate\";\nimport Installation from \"./Installation\";\nimport { __ } from '@wordpress/i18n';\nimport Icon from \"../utils/Icon\";\nimport useFields from \"../Settings/FieldsData\";\nimport useLetsEncryptData from \"./letsEncryptData\";\n\nconst LetsEncrypt = (props) => {\n    const {handleNextButtonDisabled, getFieldValue} = useFields();\n    const {attemptCount, setAttemptCount, progress, setProgress, maxAttempts, setMaxAttempts, refreshTests, setRefreshTests} = useLetsEncryptData();\n    const sleep = useRef(1500);\n    const intervalId = useRef(false);\n    const lastActionStatus = useRef('');\n    const actionIndex = useRef(0);\n    const action = useRef(false);\n    const previousActionIndex = useRef(-1);\n    const startedTests = useRef([]);\n    const actionsList = useRef([]);\n    const maxIndex = useRef(1);\n    const refProgress = useRef(0);\n\n    useEffect(() => {\n        reset();\n   }, [props.field])\n\n    const getActions = () => {\n        let propActions = props.field.actions;\n        if ( props.field.id==='generation' ) {\n            propActions = adjustActionsForDNS(propActions);\n        }\n\n        maxIndex.current = propActions.length;\n        return propActions;\n    }\n\n    useEffect(() => {\n        if ( !action.current && actionsList.length>0){\n            // action.current = actions[0];\n            actionIndex.current = 0;\n        }\n    }, [actionsList.current])\n\n    useEffect(() => {\n        if ( actionIndex.current===0 ) {\n            runTest();\n        }\n    }, [actionIndex.current])\n\n    useEffect(() => {\n        action.current = actionsList.current[actionIndex.current];\n        intervalId.current = setInterval(() => {\n            setProgress(refProgress.current + 0.2);\n        }, 100);\n    }, [actionIndex.current])\n\n    useEffect(() => {\n        if ( actionIndex.current>previousActionIndex.current ) {\n            previousActionIndex.current = actionIndex.current;\n            setProgress( ( 100 / maxIndex.current ) * (actionIndex.current));\n        }\n\n        //ensure that progress does not get to 100 when retries are still running\n        action.current = actionsList.current[actionIndex.current];\n        if ( action.current && action.current.do==='retry' && attemptCount>1 ){\n            setProgress(90);\n        }\n\n       }, [actionIndex.current, refreshTests ])\n\n\n    useEffect(() => {\n        if ( refreshTests ){\n            setRefreshTests(false);\n            reset();\n            actionsList.current.forEach(function(action,i){\n                actionsList.current[i]['status'] = 'inactive';\n            });\n        }\n    }, [refreshTests ])\n\n    const updateActionProperty = (index, property, value) => {\n        let currentActions = actionsList.current;\n        if (currentActions.hasOwnProperty(index) && currentActions[index].hasOwnProperty(property)) {\n            currentActions[index][property] = value;\n        }\n        actionsList.current = currentActions;\n    }\n\n\n    const statuses = {\n        'inactive': {\n            'icon': 'circle-times',\n            'color': 'grey',\n        },\n        'warning': {\n            'icon': 'circle-times',\n            'color': 'orange',\n        },\n        'error': {\n            'icon': 'circle-times',\n            'color': 'red',\n        },\n        'success': {\n            'icon': 'circle-check',\n            'color': 'green',\n        },\n    };\n\n    const reset = () => {\n        handleNextButtonDisabled(true);\n        actionsList.current = getActions();\n        setProgress(0);\n        refProgress.current = 0;\n        startedTests.current = [];\n        actionIndex.current = 0;\n        action.current = false;\n        previousActionIndex.current = -1;\n        lastActionStatus.current = '';\n\n     }\n\n    const adjustActionsForDNS = (actions) => {\n        //find verification_type\n        let verification_type = getFieldValue('verification_type');\n        if ( !verification_type ) verification_type = 'dir';\n\n        if ( verification_type==='dns' ) {\n            //check if dns verification already is added\n            let dnsVerificationAdded = false;\n            actions.forEach(function(action, i) {\n                if (action.action===\"verify_dns\"){\n                    dnsVerificationAdded = true;\n                }\n            });\n\n            //find bundle index\n            let create_bundle_index = -1;\n            actions.forEach(function(action, i) {\n                if (action.action===\"create_bundle_or_renew\"){\n                    create_bundle_index = i;\n                }\n            });\n\n            if (!dnsVerificationAdded && create_bundle_index>0) {\n                //store create bundle action\n                let createBundleAction = actions[create_bundle_index];\n                //overwrite create bundle action\n                let newAction = {};\n                newAction.action = 'verify_dns';\n                newAction.description = __(\"Verifying DNS records...\", \"really-simple-ssl\");\n                newAction.attempts = 2;\n                actions[create_bundle_index] = newAction;\n                actions.push(createBundleAction);\n            }\n        }\n        return actions;\n    }\n\n    const processTestResult = (action) => {\n        clearInterval(intervalId.current);\n        lastActionStatus.current = action.status;\n        if ( action.status==='success' ) {\n            setAttemptCount(0);\n        } else {\n            if (!Number.isInteger(action.attemptCount)) {\n                setAttemptCount(0);\n            }\n            setAttemptCount(attemptCount+1);\n        }\n\n        //used for dns verification actions\n        let event = new CustomEvent('rsssl_le_response', { detail: action });\n        document.dispatchEvent(event);\n        //if all tests are finished with success\n\n        //finalize happens when halfway through our tests it's finished. We can skip all others.\n        if ( action.do === 'finalize' ) {\n            actionsList.current.forEach(function(action,i){\n                if (i>actionIndex.current) {\n                    updateActionProperty(i, 'hide', true);\n                }\n            });\n\n            actionIndex.current = maxIndex.current+1;\n            handleNextButtonDisabled(false);\n        } else if ( action.do === 'continue' || action.do === 'skip' ) {\n            //new action, so reset the attempts count\n            setAttemptCount(1);\n            //skip:  drop previous completely, skip to next.\n            if ( action.do === 'skip' ) {\n                actionsList.current[actionIndex.current]['hide'] = true;\n            }\n            //move to next action, but not if we're already on the max\n            if ( maxIndex.current-1 > actionIndex.current) {\n                let next =actionIndex.current+1;\n                actionIndex.current = actionIndex.current+1;\n                runTest();\n            } else {\n                handleNextButtonDisabled(false);\n                actionIndex.current = actionIndex.current+1;\n            }\n        } else if (action.do === 'retry' ) {\n            if ( attemptCount >= maxAttempts ) {\n                actionIndex.current = maxIndex.current;\n            } else {\n                runTest();\n            }\n        } else if ( action.do === 'stop' ){\n            actionIndex.current = maxIndex.current;\n        }\n    }\n\n    const runTest = () => {\n        if (refProgress.current>=100) {\n            return;\n        }\n        let currentAction = {...actionsList.current[actionIndex.current]};\n        if (!currentAction) return;\n        let  test = currentAction.action;\n\n        if (startedTests.current.includes(test)) {\n            return;\n        }\n        startedTests.current.push(test);\n\n        const startTime = new Date();\n        setMaxAttempts( currentAction.attempts );\n        rsssl_api.runLetsEncryptTest(test, props.field.id ).then( ( response ) => {\n            const endTime = new Date();\n            let timeDiff = endTime - startTime; //in ms\n            const elapsedTime = Math.round(timeDiff);\n\n            currentAction.status = response.status ? response.status : 'inactive';\n            currentAction.hide = false;\n            currentAction.description = response.message;\n            currentAction.do = response.action;\n            currentAction.output = response.output ? response.output : false;\n            sleep.current = 500;\n            if (elapsedTime<1500) {\n               sleep.current = 1500-elapsedTime;\n            }\n            action.current = currentAction;\n            actionsList.current[actionIndex.current] = currentAction;\n        }).then(sleeper(sleep.current)).then(() => {\n            processTestResult(currentAction);\n      });\n\n    }\n\n    const getStyles = () => {\n        return Object.assign(\n            {},\n            {width: progress+\"%\"},\n        );\n    }\n\n    const getStatusIcon = (action) => {\n        if (!statuses.hasOwnProperty(action.status)) {\n            return statuses['inactive'].icon;\n        }\n        return statuses[action.status].icon\n    }\n\n    const getStatusColor = (action) => {\n        if (!statuses.hasOwnProperty(action.status)) {\n            return statuses['inactive'].color;\n        }\n        return statuses[action.status].color;\n    }\n\n    let progressBarColor = lastActionStatus.current ==='error' ? 'rsssl-orange' : '';\n    if ( !props.field.actions ) {\n        return (<></>);\n    }\n\n    //filter out skipped actions\n    let actionsOutput = actionsList.current.filter(action => action.hide !== true);\n    refProgress.current = progress;\n    if (maxIndex.current === actionIndex.current+1 ){\n        refProgress.current = 100;\n    }\n    return (\n        <>\n            <div className=\"rsssl-lets-encrypt-tests\">\n                <div className=\"rsssl-progress-bar\"><div className=\"rsssl-progress\"><div className={'rsssl-bar ' + progressBarColor} style={getStyles()}></div></div></div>\n                <div className=\"rsssl_letsencrypt_container rsssl-progress-container field-group\">\n                    <ul>\n                       {actionsOutput.map((action, i) =>\n                              <li key={\"action-\"+i}>\n                                  <Icon name = {getStatusIcon(action)} color = {getStatusColor(action)} />\n                                        {action.do==='retry' && attemptCount >=1 && <>{__(\"Attempt %s.\", \"really-simple-ssl\").replace('%s', attemptCount)} </>}\n                                        &nbsp;\n                                        <span dangerouslySetInnerHTML={{__html:action.description}}></span>\n                                    </li>\n\n                            )\n                        }\n                    </ul>\n                </div>\n                {props.field.id === 'directories' && <Directories field={props.field} action={actionsList.current[actionIndex.current]}/> }\n                {props.field.id === 'dns-verification' && <DnsVerification field={props.field} action={actionsList.current[actionIndex.current]}/> }\n                {props.field.id === 'generation' && <Generation field={props.field} action={actionsList.current[actionIndex.current]}/> }\n                {props.field.id === 'installation' && <Installation field={props.field} action={actionsList.current[actionIndex.current]}/> }\n                {props.field.id === 'activate' && <Activate field={props.field} action={actionsList.current[actionIndex.current]}/> }\n            </div>\n        </>\n    )\n}\n\nexport default LetsEncrypt;","import useModal from \"./ModalData\";\n\n/**\n * Button to open the modal\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst ModalControl = (props) => {\n    const {handleModal} = useModal();\n    const onClickHandler = () => {\n        handleModal(true, props.modalData, props.item );\n    }\n\n    return (\n        <button className={\"button button-\" + props.btnStyle} onClick={ (e) => onClickHandler(e) }>{props.btnText}</button>\n    )\n}\nexport default ModalControl","import { useEffect} from \"@wordpress/element\";\nimport { Button, ToggleControl } from '@wordpress/components';\nimport * as rsssl_api from \"../utils/api\";\nimport { __ } from '@wordpress/i18n';\nimport Icon from \"../utils/Icon\";\nimport Placeholder from '../Placeholder/Placeholder';\nimport useMenu from \"../Menu/MenuData\";\nimport useFields from \"../Settings/FieldsData\";\nimport useOnboardingData from \"./OnboardingData\";\nimport useRiskData from \"../Settings/RiskConfiguration/RiskData\";\n\nconst Onboarding = (props) => {\n    const { fetchFieldsData, updateField, updateFieldsData, getFieldValue} = useFields();\n    const {\n        fetchVulnerabilities\n    } = useRiskData();\n    const {\n        dismissModal,\n        actionHandler,\n        getSteps,\n        error,\n        certificateValid,\n        networkwide,\n        sslEnabled,\n        dataLoaded,\n        processing,\n        setProcessing,\n        steps,\n        currentStep,\n        currentStepIndex,\n        setCurrentStepIndex,\n        overrideSSL,\n        setOverrideSSL,\n        networkActivationStatus,\n        setNetworkActivationStatus,\n        networkProgress,\n        refreshSSLStatus,\n        activateSSLNetworkWide,\n        email,\n        setEmail,\n        saveEmail,\n        includeTips,\n        setIncludeTips,\n        sendTestEmail,\n        setSendTestEmail\n    } = useOnboardingData();\n    const {setSelectedMainMenuItem, selectedMainMenuItem} = useMenu();\n    const statuses = {\n        'inactive': {\n            'icon': 'info',\n            'color': 'orange',\n        },\n        'warning': {\n            'icon': 'circle-times',\n            'color': 'orange',\n        },\n        'error': {\n            'icon': 'circle-times',\n            'color': 'red',\n        },\n        'success': {\n            'icon': 'circle-check',\n            'color': 'green',\n        },\n        'processing': {\n            'icon': 'file-download',\n            'color': 'red',\n        },\n    };\n\n    useEffect( () => {\n        if (networkwide && networkActivationStatus==='main_site_activated') {\n            activateSSLNetworkWide();\n        }\n    }, [networkActivationStatus, networkProgress])\n\n    useEffect( () => {\n        const run = async () => {\n            getSteps(false);\n            if ( dataLoaded && sslEnabled && currentStepIndex===0) {\n                setCurrentStepIndex(1)\n            }\n\n            if (getFieldValue('notifications_email_address') !== '' && email==='') {\n                setEmail(getFieldValue('notifications_email_address'))\n            }\n        }\n        run();\n    }, [])\n\n    //ensure all fields are updated, and progress is retrieved again\n    useEffect( () => {\n        //in currentStep.items, find item with id 'hardening'\n        //if it has status 'completed' fetchFieldsData again.\n        if ( currentStep && currentStep.items ) {\n            let hardeningItem = currentStep.items.find( (item) => {\n                return item.id==='hardening';\n            })\n            if ( hardeningItem && hardeningItem.status==='success' ) {\n                fetchFieldsData('hardening');\n                fetchVulnerabilities();\n            }\n        }\n    }, [currentStep])\n\n    const activateSSL = () => {\n        setProcessing(true);\n        rsssl_api.runTest('activate_ssl' ).then( async ( response ) => {\n            setProcessing(false);\n            setCurrentStepIndex(currentStepIndex+1);\n            //change url to https, after final check\n            if ( response.success ) {\n\n                if ( response.site_url_changed ) {\n                    window.location.reload();\n                } else {\n                    if ( networkwide ) {\n                        setNetworkActivationStatus('main_site_activated');\n                    }\n                }\n            }\n        }).then( async () => { await fetchFieldsData(selectedMainMenuItem ) } );\n    }\n\n    const parseStepItems = (items) => {\n        return items && items.map( (item, index) => {\n            let { title, description, current_action, action, status, button, id, read_more } = item\n\n            if ( id==='ssl_enabled' && networkwide ) {\n                if ( networkProgress>=100) {\n                    status = 'success';\n                    title = __( \"SSL has been activated network wide\", \"really-simple-ssl\" );\n                } else {\n                    status = 'processing';\n                    title = __( \"Processing activation of subsites networkwide\", \"really-simple-ssl\" );\n                }\n            }\n            const statusIcon = item.status!=='success' && item.is_plugin && item.current_action === 'none' ? 'empty' : statuses[status].icon;\n            const statusColor = statuses[status].color;\n            const currentActions = {\n                'activate_setting': __('Activating...',\"really-simple-ssl\"),\n                'activate': __('Activating...',\"really-simple-ssl\"),\n                'install_plugin': __('Installing...',\"really-simple-ssl\"),\n                'error': __('Failed',\"really-simple-ssl\"),\n                'completed': __('Finished',\"really-simple-ssl\"),\n            };\n\n            let buttonTitle = '';\n            if ( button ) {\n                buttonTitle = button;\n                if ( current_action!=='none' ) {\n                    buttonTitle = currentActions[current_action];\n                    if ( current_action==='failed' ) {\n                        buttonTitle = currentActions['error'];\n                    }\n                }\n            }\n            let showLink = (button && button===buttonTitle);\n            let showAsPlugin = item.status!=='success' && item.is_plugin && item.current_action === 'none';\n            let isPluginClass = showAsPlugin ? 'rsssl-is-plugin' : '';\n            title = showAsPlugin ? <b>{title}</b> : title;\n            return (\n                <li key={\"pluginItem-\"+index} className={isPluginClass}>\n                    <Icon name = {statusIcon} color = {statusColor} />\n                    {title}{description && <>&nbsp;-&nbsp;{description}</>}\n                    {id==='ssl_enabled' && networkwide && networkActivationStatus==='main_site_activated' && <>\n                        &nbsp;-&nbsp;\n                        {networkProgress<100 && <>{__(\"working\", \"really-simple-ssl\")}&nbsp;{networkProgress}%</>}\n                        {networkProgress>=100 && __(\"completed\", \"really-simple-ssl\") }\n                        </>}\n                    {button && <>&nbsp;-&nbsp;\n                        {showLink && <Button isLink={true} onClick={(e) => actionHandler(id, action, e)}>{buttonTitle}</Button>}\n                        {!showLink && <>{buttonTitle}</>}\n                    </>}\n                    {showAsPlugin && read_more && <a target=\"_blank\" href={read_more} className=\"button button-default rsssl-read-more\">{__(\"Read More\", \"really-simple-ssl\")}</a>}\n                </li>\n            )\n        })\n    }\n\n    const goToDashboard = () => {\n        if ( props.isModal ) dismissModal();\n        setSelectedMainMenuItem('dashboard');\n    }\n\n    const goToLetsEncrypt = () => {\n         if (props.isModal) dismissModal();\n          window.location.href=rsssl_settings.letsencrypt_url;\n    }\n\n    const saveEmailAndUpdateFields = async () => {\n        await saveEmail();\n\n        updateField('send_notifications_email', true );\n        updateField('notifications_email_address', email );\n        updateFieldsData();\n    }\n\n    const controlButtons = () => {\n\n        let ActivateSSLText = networkwide ? __(\"Activate SSL networkwide\", \"really-simple-ssl\") : __(\"Activate SSL\", \"really-simple-ssl\");\n        if ( currentStepIndex === 0 ) {\n           return (\n                <>\n                    <button disabled={processing || (!certificateValid && !overrideSSL) } className=\"button button-primary\" onClick={() => {activateSSL()}}>{ActivateSSLText}</button>\n                    { certificateValid && !rsssl_settings.pro_plugin_active && <a target=\"_blank\" href={rsssl_settings.upgrade_link} className=\"button button-default\" >{__(\"Improve Security with PRO\", \"really-simple-ssl\")}</a>}\n                    { !certificateValid && <button className=\"button button-default\" onClick={() => {goToLetsEncrypt()}}>{__(\"Install SSL\", \"really-simple-ssl\")}</button>}\n                    { !certificateValid && <ToggleControl\n                        label={__(\"Override SSL detection\",\"really-simple-ssl\")}\n                        checked={overrideSSL}\n                        onChange={(value) => {\n                            setOverrideSSL(value);\n                            let data = {};\n                            data.overrideSSL = value;\n                            rsssl_api.doAction('override_ssl_detection',data );\n                       }}\n                    />}\n                </>\n            );\n        }\n\n        if (currentStepIndex>0 && currentStepIndex<steps.length-1) {\n            return (\n                <>\n                    <button disabled={processing} className=\"button button-primary\" onClick={() => saveEmailAndUpdateFields()}>{__('Save and continue', 'really-simple-ssl')}</button>\n                    <button disabled={processing} className=\"button button-default\" onClick={() => {setCurrentStepIndex(currentStepIndex+1)}}>{__('Skip', 'really-simple-ssl')}</button>\n                </>\n            );\n        }\n\n        //for last step only\n        if ( steps.length-1 === currentStepIndex ) {\n            return (\n                <>\n                    <button className=\"button button-primary\" onClick={() => {goToDashboard()}}>{__('Go to Dashboard', 'really-simple-ssl')}</button>\n                    <button className=\"button button-default\" onClick={() => dismissModal()}>{__('Dismiss', 'really-simple-ssl')}</button>\n                </>\n            );\n        }\n    }\n\n    if (error){\n        return (\n            <Placeholder lines=\"3\" error={error}></Placeholder>\n        )\n    }\n    let step = currentStep;\n    let processingClass = processing ? 'rsssl-processing' : '';\n    return (\n        <>\n            { !dataLoaded && <>\n                <div className=\"rsssl-onboarding-placeholder\">\n                    <ul>\n                        <li><Icon name = \"file-download\" color = 'grey' />{__(\"Fetching next step...\", \"really-simple-ssl\")}</li>\n                    </ul>\n                    <Placeholder lines=\"3\" ></Placeholder>\n                </div>\n            </>\n            }\n            {\n                dataLoaded &&\n                    <div className={ \"rsssl-modal-content-step \"+processingClass }>\n                        <ul>\n                            { parseStepItems(step.items) }\n                        </ul>\n                        { currentStep.id === 'email'&&\n                            <>\n                                <div>\n                                    <input type=\"email\" value={email} placeholder={__(\"Your email address\", \"really-simple-ssl\")} onChange={(e) => setEmail(e.target.value)} />\n                                </div><div>\n                                <label><input onChange={ (e) => setIncludeTips(e.target.checked)} type=\"checkbox\" checked={includeTips} />{__(\"Include 6 Tips & Tricks to get started with Really Simple SSL.\",\"really-simple-ssl\")}&nbsp;<a href=\"https://really-simple-ssl.com/legal/privacy-statement/\" target=\"_blank\">{__(\"Privacy Statement\", \"really-simple-ssl\")}</a></label>\n                                </div><div>\n                                    <label><input onChange={ (e) => setSendTestEmail(e.target.checked)} type=\"checkbox\" checked={sendTestEmail} />{__(\"Send a notification test email - Notification emails are sent from your server.\",\"really-simple-ssl\")}</label>\n                                </div>\n                            </>\n\n                        }\n                        { certificateValid && step.info_text && <div className=\"rsssl-modal-description\" dangerouslySetInnerHTML={{__html: step.info_text}} /> }\n                        { currentStepIndex===0 && !certificateValid &&\n                            <div className=\"rsssl-modal-description\">\n                               <a href=\"#\" onClick={ (e) => refreshSSLStatus(e)}>\n                                   { __(\"Refresh SSL status\", \"really-simple-ssl\")}\n                               </a>&nbsp;{__(\"The SSL detection method is not 100% accurate.\", \"really-simple-ssl\")}&nbsp;\n                               {__(\"If you’re certain an SSL certificate is present, and refresh SSL status does not work, please check “Override SSL detection” to continue activating SSL.\", \"really-simple-ssl\")}\n                            </div> }\n                        <div className=\"rsssl-modal-content-step-footer\">\n                            {controlButtons()}\n                        </div>\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default Onboarding;","import { __ } from '@wordpress/i18n';\nimport Hyperlink from \"../utils/Hyperlink\";\nimport * as rsssl_api from \"../utils/api\";\nimport useFields from \"./FieldsData\";\n\n/**\n * Render a help notice in the sidebar\n */\nconst Button = (props) => {\n    const {addHelpNotice} = useFields();\n\n    const onClickHandler = (action) => {\n        let data = {};\n        rsssl_api.doAction(action, data).then( ( response ) => {\n            let label = response.success ? 'success' : 'warning';\n            let title = __( \"Test notification by email\", 'really-simple-ssl' );\n            let text = response.message;\n            addHelpNotice(props.field.id, label, text, title, false);\n        });\n    }\n    return (\n        <>\n            { props.field.url &&\n                <Hyperlink className=\"button button-default\" text={props.field.button_text} url={props.field.url}/>\n            }\n            { props.field.action &&\n                <button onClick={ () => onClickHandler( props.field.action ) }  className=\"button button-default\">{props.field.button_text}</button>\n            }\n\n        </>\n    );\n}\n\nexport default Button\n","/*\n* The tooltip can't be included in the native toggleControl, so we have to build our own.\n*/\n\nconst CheckboxControl = (props) => {\n    const onChangeHandler = (e) => {\n        let fieldValue = !props.field.value;\n        props.onChangeHandler(fieldValue)\n    }\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            onChangeHandler(true);\n        }\n    }\n    let field = props.field;\n    let is_checked = field.value ? 'is-checked' : '';\n    let is_disabled = props.disabled ? 'is-disabled' : '';\n    return (\n        <>\n            <div className=\"components-base-control components-toggle-control\">\n                <div className=\"components-base-control__field\">\n                    <div data-wp-component=\"HStack\" className=\"components-flex components-h-stack\">\n                        <span className={ \"components-form-toggle \"+is_checked + ' ' +is_disabled}>\n                            <input\n                                onKeyDown={(e) => handleKeyDown(e)}\n                                checked={field.value}\n                                className=\"components-form-toggle__input\"\n                                onChange={ ( e ) => onChangeHandler(e) }\n                                id={field.id}\n                                type=\"checkbox\"\n                                disabled={props.disabled}\n                            />\n                        <span className=\"components-form-toggle__track\"></span>\n                        <span className=\"components-form-toggle__thumb\"></span>\n                        </span>\n                        <label htmlFor={field.id} className=\"components-toggle-control__label\">{props.label}</label>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default CheckboxControl","import {\n    TextControl,\n    RadioControl,\n    TextareaControl,\n    __experimentalNumberControl as NumberControl\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport License from \"./License/License\";\nimport Password from \"./Password\";\nimport SelectControl from \"./SelectControl\";\nimport Host from \"./Host\";\nimport Hyperlink from \"../utils/Hyperlink\";\nimport LetsEncrypt from \"../LetsEncrypt/LetsEncrypt\";\nimport Activate from \"../LetsEncrypt/Activate\";\nimport MixedContentScan from \"./MixedContentScan/MixedContentScan\";\nimport PermissionsPolicy from \"./PermissionsPolicy\";\nimport CheckboxControl from \"./CheckboxControl\";\nimport Support from \"./Support\";\nimport LearningMode from \"./LearningMode/LearningMode\";\nimport RiskComponent from \"./RiskConfiguration/RiskComponent\";\nimport VulnerabilitiesOverview from \"./RiskConfiguration/vulnerabilitiesOverview\";\nimport Button from \"./Button\";\nimport Icon from \"../utils/Icon\";\nimport { useEffect} from \"@wordpress/element\";\nimport useFields from \"./FieldsData\";\nimport PostDropdown from \"./PostDropDown\";\nimport NotificationTester from \"./RiskConfiguration/NotificationTester\";\n\nconst Field = (props) => {\n    let scrollAnchor = React.createRef();\n    const {updateField, setChangedField, highLightField} = useFields();\n\n    useEffect( () => {\n        if ( highLightField===props.field.id && scrollAnchor.current ) {\n            scrollAnchor.current.scrollIntoView({ behavior: 'smooth', block: 'start' });\n        }\n    },[]);\n\n    const onChangeHandler = (fieldValue) => {\n        let field = props.field;\n        updateField(field.id, fieldValue);\n\n        //we can configure other fields if a field is enabled, or set to a certain value.\n        let configureFieldCondition = false;\n        if ( field.configure_on_activation ) {\n            if ( field.configure_on_activation.hasOwnProperty('condition') && props.field.value==field.configure_on_activation.condition ) {\n                configureFieldCondition = true;\n            }\n            let configureField = field.configure_on_activation[0];\n            for (let fieldId in configureField ) {\n                if ( configureFieldCondition && configureField.hasOwnProperty(fieldId) ) {\n                    updateField(fieldId, configureField[fieldId] );\n                }\n            }\n        }\n        setChangedField( field.id, fieldValue );\n    }\n\n    const labelWrap = (field) => {\n        let tooltipColor = field.warning ? 'red': 'black';\n        return (\n            <>\n                <div className=\"cmplz-label-text\">{field.label}</div>\n                {field.tooltip && <Icon name = \"info-open\" tooltip={field.tooltip} color = {tooltipColor} />}\n            </>\n        )\n    }\n\n    let field = props.field;\n    let fieldValue = field.value;\n    let disabled = field.disabled;\n    let highLightClass = 'rsssl-field-wrap';\n    if ( highLightField===props.field.id ) {\n        highLightClass = 'rsssl-field-wrap rsssl-highlight';\n    }\n\n    let options = [];\n    if ( field.options ) {\n        for (var key in field.options) {\n            if (field.options.hasOwnProperty(key)) {\n                let item = {};\n                item.label = field.options[key];\n                item.value = key;\n                options.push(item);\n            }\n        }\n    }\n\n    //if a feature can only be used on networkwide or single site setups, pass that info here.\n    if ( !rsssl_settings.networkwide_active && field.networkwide_required ) {\n        disabled = true;\n        field.comment = <>\n            {__(\"This feature is only available networkwide.\",\"really-simple-ssl\")}\n            <Hyperlink target=\"_blank\" text={__(\"Network settings\",\"really-simple-ssl\")} url={rsssl_settings.network_link}/>\n        </>\n    }\n\n    if ( field.conditionallyDisabled ) {\n        disabled = true;\n    }\n\n    if ( !field.visible ) {\n        return (\n            <></>\n        );\n    }\n\n    if ( field.type==='checkbox' ){\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n                <CheckboxControl\n                  label={labelWrap(field)}\n                  field={field}\n                  disabled={disabled}\n                  onChangeHandler={ ( fieldValue ) => onChangeHandler(fieldValue) }\n                />\n\n                {field.comment && <div className=\"rsssl-comment\" dangerouslySetInnerHTML={{__html:field.comment}}></div>}\n            </div>\n        );\n    }\n\n    if ( field.type==='hidden' ){\n        return (\n            <input type=\"hidden\" value={field.value}/>\n        );\n    }\n\n    if ( field.type==='radio' ){\n        return (    \n            <div className={highLightClass} ref={scrollAnchor}>\n              <RadioControl\n                  label={labelWrap(field)}\n                  onChange={ ( fieldValue ) => onChangeHandler(fieldValue) }\n                  selected={ fieldValue }\n                  options={ options }\n              />\n            </div>\n        );\n    }\n\n    if ( field.type==='text' || field.type==='email' ){\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <TextControl\n                  required={ field.required }\n                  placeholder={ field.placeholder }\n                  disabled={ disabled }\n                  help={ field.comment }\n                  label={labelWrap(field)}\n                  onChange={ ( fieldValue ) => onChangeHandler(fieldValue) }\n                  value= { fieldValue }\n              />\n            </div>\n        );\n    }\n\n    if ( field.type==='button' ){\n        return (\n            <div className={'rsssl-field-button ' + highLightClass} ref={scrollAnchor}>\n                <label>{field.label}</label>\n                <Button field={field}/>\n            </div>\n        );\n    }\n\n    if ( field.type==='password' ){\n        return (\n            <div className={ highLightClass} ref={scrollAnchor}>\n                <Password\n                    index={ props.index }\n                    field={ field }\n                />\n            </div>\n        );\n    }\n\n    if ( field.type==='textarea' ){\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <TextareaControl\n                  label={ field.label }\n                  help={ field.comment }\n                  value= { fieldValue }\n                  onChange={ ( fieldValue ) => onChangeHandler(fieldValue) }\n                  disabled={ field.disabled }\n              />\n            </div>\n        );\n    }\n\n    if ( field.type==='license' ){\n        let field = props.field;\n        let fieldValue = field.value;\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <License index={props.index} field={field} fieldValue={fieldValue}/>\n            </div>\n\n        );\n    }\n    if ( field.type==='number' ){\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n                <NumberControl\n                    onChange={ ( fieldValue ) => onChangeHandler(fieldValue) }\n                    help={ field.comment }\n                    label={ field.label }\n                    value= { fieldValue }\n                />\n            </div>\n        );\n    }\n    if ( field.type==='email' ){\n        return (\n            <div className={this.highLightClass} ref={this.scrollAnchor}>\n                <TextControl\n                    help={ field.comment }\n                    label={ field.label }\n                    onChange={ ( fieldValue ) => this.onChangeHandler(fieldValue) }\n                    value= { fieldValue }\n                />\n            </div>\n        );\n    }\n\n    if ( field.type==='host') {\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <Host\n                  index={props.index}\n                  field={props.field}\n              />\n            </div>\n        )\n    }\n\n    if ( field.type==='select') {\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <SelectControl\n                  disabled={ disabled }\n                  label={labelWrap(field)}\n                  onChangeHandler={ ( fieldValue ) => onChangeHandler(fieldValue) }\n                  value= { fieldValue }\n                  options={ options }\n                  field={field}\n              />\n            </div>\n        )\n    }\n\n    if ( field.type==='support' ) {\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <Support/>\n            </div>\n        )\n    }\n\n    if ( field.type==='postdropdown' ) {\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <PostDropdown field={props.field}/>\n            </div>\n        )\n    }\n    if ( field.type==='permissionspolicy' ) {\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <PermissionsPolicy disabled={disabled} field={props.field} options={options}/>\n            </div>\n        )\n    }\n\n    if ( field.type==='learningmode' ) {\n        return(\n            <div className={highLightClass} ref={scrollAnchor}>\n              <LearningMode disabled={disabled} field={props.field}/>\n            </div>\n        )\n    }\n\n    if ( field.type==='riskcomponent' ) {\n        return (<div className={highLightClass} ref={scrollAnchor}>\n            <RiskComponent field={props.field}/>\n        </div>)\n    }\n\n    if ( field.type === 'mixedcontentscan' ) {\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <MixedContentScan field={props.field}/>\n            </div>\n        )\n    }\n\n    if (field.type === 'vulnerabilitiestable') {\n        return (\n            <div className={highLightClass} ref={scrollAnchor}>\n              <VulnerabilitiesOverview field={props.field} />\n            </div>\n        )\n    }\n\n    if(field.type === 'notificationtester') {\n        return (\n            <div className={'rsssl-field-button ' + highLightClass} ref={scrollAnchor}>\n                <NotificationTester field={props.field} labelWrap={labelWrap}/>\n            </div>\n        )\n    }\n\n    if ( field.type === 'letsencrypt' ) {\n            return (\n               <LetsEncrypt field={field} />\n            )\n    }\n\n    if ( field.type === 'activate' ) {\n            return (\n               <Activate field={field}/>\n            )\n    }\n\n    return (\n        'not found field type '+field.type\n    );\n}\n\nexport default Field;","import {\n    SelectControl,\n} from '@wordpress/components';\nimport {useRef} from \"@wordpress/element\";\nimport useFields from \"./FieldsData\";\n\nconst Host = (props) => {\n    const {updateField, setChangedField, saveFields, handleNextButtonDisabled} = useFields();\n    const disabled = useRef(false);\n\n    const onChangeHandler = async (fieldValue) => {\n        let field = props.field;\n        //force update, and get new fields.\n        handleNextButtonDisabled(true);\n        disabled.current = true;\n        updateField(field.id, fieldValue);\n        setChangedField(field.id, fieldValue);\n\n        await saveFields(true, false);\n\n        handleNextButtonDisabled(false);\n        disabled.current = false;\n    }\n\n    let fieldValue = props.field.value;\n    let field = props.field;\n    let options = [];\n    if ( field.options ) {\n        for (var key in field.options) {\n            if (field.options.hasOwnProperty(key)) {\n                let item = {};\n                item.label = field.options[key];\n                item.value = key;\n                options.push(item);\n            }\n        }\n    }\n\n    return (\n          <SelectControl\n              label={ field.label }\n              onChange={ ( fieldValue ) => onChangeHandler(fieldValue) }\n              value= { fieldValue }\n              options={ options }\n              disabled={disabled.current}\n          />\n    )\n}\nexport default Host;","import { __ } from '@wordpress/i18n';\nimport useLearningMode from \"./LearningModeData\";\nconst ChangeStatus = (props) => {\n    const {updateStatus} = useLearningMode();\n\n    let statusClass = props.item.status==1 ? 'button button-primary rsssl-status-allowed' : 'button button-default rsssl-status-revoked';\n    let label = props.item.status==1 ? __(\"Revoke\", \"really-simple-ssl\") : __(\"Allow\", \"really-simple-ssl\");\n    return (\n        <button onClick={ () => updateStatus( props.item.status, props.item, props.field.id ) } className={statusClass}>{label}</button>\n    )\n}\nexport default ChangeStatus","import useLearningMode from \"./LearningModeData\";\n\nconst Delete = (props) => {\n    const {deleteData} = useLearningMode();\n\n    return (\n        <button type=\"button\" className=\" rsssl-learning-mode-delete\" onClick={ () => deleteData( props.item, props.field.id ) }>\n            <svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 320 512\" height=\"16\" >\n                <path fill=\"#000000\" d=\"M310.6 361.4c12.5 12.5 12.5 32.75 0 45.25C304.4 412.9 296.2 416 288 416s-16.38-3.125-22.62-9.375L160 301.3L54.63 406.6C48.38 412.9 40.19 416 32 416S15.63 412.9 9.375 406.6c-12.5-12.5-12.5-32.75 0-45.25l105.4-105.4L9.375 150.6c-12.5-12.5-12.5-32.75 0-45.25s32.75-12.5 45.25 0L160 210.8l105.4-105.4c12.5-12.5 32.75-12.5 45.25 0s12.5 32.75 0 45.25l-105.4 105.4L310.6 361.4z\"/>\n            </svg>\n        </button>\n    )\n}\nexport default Delete","import { __ } from '@wordpress/i18n';\nimport {useState,useEffect} from '@wordpress/element';\nimport ChangeStatus from \"./ChangeStatus\";\nimport Delete from \"./Delete\";\nimport Icon from \"../../utils/Icon\";\nimport useFields from \"./../FieldsData\";\nimport useLearningMode from \"./LearningModeData\";\n\nconst LearningMode = (props) => {\n    const {updateField, getFieldValue, getField, setChangedField, highLightField, saveFields} = useFields();\n    const {fetchLearningModeData, learningModeData, dataLoaded} = useLearningMode();\n\n    //used to show if a feature is already enforced by a third party\n    const [enforcedByThirdparty, setEnforcedByThirdparty] = useState(0);\n    //toggle from enforced to not enforced\n    const [enforce, setEnforce] = useState(0);\n    //toggle from learning mode to not learning mode\n    const [learningMode, setLearningMode] = useState(0);\n    //set learning mode to completed\n    const [learningModeCompleted, setLearningModeCompleted] = useState(0);\n    const [hasError, setHasError] = useState(false);\n    //check if learningmode has been enabled at least once\n    const [lmEnabledOnce, setLmEnabledOnce] = useState(0);\n    //filter the data\n    const [filterValue, setFilterValue] = useState(-1);\n    //the value that is used to enable or disable this feature. On or of.\n    const [controlField, setControlField] = useState(false);\n\n    const [DataTable, setDataTable] = useState(null);\n    const [theme, setTheme] = useState(null);\n    useEffect( () => {\n        import('react-data-table-component').then(({ default: DataTable, createTheme }) => {\n            setDataTable(() => DataTable);\n            setTheme(() => createTheme('really-simple-plugins', {\n                divider: {\n                    default: 'transparent',\n                },\n            }, 'light'));\n        });\n\n    }, []);\n\n\n    /**\n     * Styling\n     */\n    const conditionalRowStyles = [\n        {\n            when: row => row.status ==0,\n            classNames: ['rsssl-datatables-revoked'],\n        },\n    ];\n\n    const customStyles = {\n        headCells: {\n            style: {\n                paddingLeft: '0', // override the cell padding for head cells\n                paddingRight: '0',\n            },\n        },\n        cells: {\n            style: {\n                paddingLeft: '0', // override the cell padding for data cells\n                paddingRight: '0',\n            },\n        },\n    };\n\n\n;\n\n    /**\n     * Initialize\n     */\n    useEffect(() => {\n        const run = async () => {\n            await fetchLearningModeData(props.field.id);\n            let controlField = getField(props.field.control_field );\n            let enforced_by_thirdparty = controlField.value === 'enforced-by-thirdparty';\n            let enforce = enforced_by_thirdparty || controlField.value === 'enforce';\n\n            setControlField(controlField);\n            setEnforcedByThirdparty(enforced_by_thirdparty);\n            setLearningModeCompleted(controlField.value==='completed');\n            setHasError(controlField.value==='error');\n            setLmEnabledOnce(getFieldValue(props.field.control_field+'_lm_enabled_once'))\n            setEnforce(enforce);\n            setLearningMode(controlField.value === 'learning_mode');\n        }\n        run();\n    }, [enforce, learningMode] );\n\n    const toggleEnforce = (e, enforceValue) => {\n        e.preventDefault();\n        //enforce this setting\n        let controlFieldValue = enforceValue==1 ? 'enforce' : 'disabled';\n        setEnforce(enforceValue);\n        setLearningModeCompleted(0);\n        setLearningMode(0);\n        setChangedField(controlField.id, controlFieldValue);\n        updateField(controlField.id, controlFieldValue);\n        saveFields(true, false);\n        fetchLearningModeData();\n    }\n\n\n    const toggleLearningMode = async (e) => {\n         e.preventDefault();\n        let lmEnabledOnceField = getField(props.field.control_field+'_lm_enabled_once');\n        if ( learningMode ) {\n            setLmEnabledOnce(1);\n            updateField(lmEnabledOnceField.id, 1);\n        }\n\n        let controlFieldValue;\n        if ( learningMode || learningModeCompleted ) {\n            setLearningMode(0);\n            controlFieldValue = 'disabled';\n        } else {\n            setLearningMode(1);\n            controlFieldValue = 'learning_mode';\n        }\n        setLearningModeCompleted(0);\n        setChangedField(controlField.id, controlFieldValue);\n        updateField(controlField.id, controlFieldValue);\n        setChangedField(lmEnabledOnceField.id, lmEnabledOnceField.value);\n        updateField(lmEnabledOnceField, lmEnabledOnceField.value);\n        await saveFields(true, false);\n    }\n\n    const Filter = () => (\n        <>\n            <select onChange={ ( e ) => setFilterValue(e.target.value) } value={filterValue}>\n                <option value=\"-1\" >{__(\"All\", \"really-simple-ssl\")}</option>\n                <option value=\"1\" >{__(\"Allowed\", \"really-simple-ssl\")}</option>\n                <option value=\"0\" >{__(\"Blocked\", \"really-simple-ssl\")}</option>\n            </select>\n        </>\n    );\n\n    let field = props.field;\n    let configuringString = __(\" The %s is now in report-only mode and will collect directives. This might take a while. Afterwards you can Exit, Edit and Enforce these Directives.\", \"really-simple-ssl\").replace('%s', field.label);\n    let disabledString = __(\"%s has been disabled.\", \"really-simple-ssl\").replace('%s', field.label);\n    let enforcedString = __(\"%s is enforced.\", \"really-simple-ssl\").replace('%s', field.label);\n    let enforceDisabled = !lmEnabledOnce;\n    if (enforcedByThirdparty) disabledString = __(\"%s is already set outside Really Simple SSL.\", \"really-simple-ssl\").replace('%s', field.label);\n    let highLightClass = 'rsssl-field-wrap';\n    if ( highLightField===props.field.id ) {\n        highLightClass = 'rsssl-field-wrap rsssl-highlight';\n    }\n    //build our header\n    let columns = [];\n    field.columns.forEach(function(item, i) {\n        let newItem = {\n            name: item.name,\n            sortable: item.sortable,\n            width: item.width,\n            selector: row => row[item.column],\n        }\n        columns.push(newItem);\n    });\n\n    let data = learningModeData;\n    data = data.filter(item => item.status<2);\n    if (filterValue!=-1) {\n        data = data.filter(item => item.status==filterValue);\n    }\n    for (const item of data){\n        if (item.login_status) item.login_statusControl = item.login_status == 1 ? __(\"success\", \"really-simple-ssl\") : __(\"failed\", \"really-simple-ssl\");\n        item.statusControl = <ChangeStatus item={item} field={props.field} />;\n        item.deleteControl = <Delete item={item} field={props.field}/>;\n    }\n\n    if (!DataTable || !theme) return null;\n\n    return (\n        <>\n            <div key=\"1\" className={ highLightClass}>\n                { !dataLoaded || data.length==0 && <>\n                    <div className=\"rsssl-learningmode-placeholder\">\n                        <div></div><div></div><div></div><div></div>\n                    </div>\n                </>}\n                {data.length>0 && <>\n                    <DataTable\n                        columns={columns}\n                        data={data}\n                        dense\n                        pagination\n                        noDataComponent={__(\"No results\", \"really-simple-ssl\")}\n                        persistTableHead\n                        theme={theme}\n                        customStyles={customStyles}\n                        conditionalRowStyles={conditionalRowStyles}\n                    /></>\n                }\n              <div key=\"2\" className={\"rsssl-learning-mode-footer \"}>\n                  {hasError && <div className=\"rsssl-locked\">\n                          <div className=\"rsssl-locked-overlay\">\n                              <span className=\"rsssl-progress-status rsssl-learning-mode-error\">{__(\"Error detected\",\"really-simple-ssl\")}</span>\n                              {__(\"%s cannot be implemented due to server limitations. Check your notices for the detected issue.\", \"really-simple-ssl\").replace('%s', field.label)}&nbsp;\n                              <a className=\"rsssl-learning-mode-link\" href=\"#\" onClick={ (e) => toggleEnforce(e, false ) }>{__(\"Disable\", \"really-simple-ssl\") }</a>\n                          </div>\n                      </div>\n                  }\n                  {!hasError && <>\n                      { enforce!=1 && <button disabled={enforceDisabled} className=\"button button-primary\" onClick={ (e) => toggleEnforce(e, true ) }>{__(\"Enforce\",\"really-simple-ssl\")}</button> }\n                      { !enforcedByThirdparty && enforce==1 && <button className=\"button\" onClick={ (e) => toggleEnforce(e, false ) }>{__(\"Disable\",\"really-simple-ssl\")}</button> }\n                      <label>\n                          <input type=\"checkbox\"\n                              disabled = {enforce}\n                              checked ={learningMode==1}\n                              value = {learningMode}\n                              onChange={ ( e ) => toggleLearningMode(e) }\n                          />\n                          {__(\"Enable Learning Mode to configure automatically\",\"really-simple-ssl\")}\n                      </label>\n                    { enforce==1 && <div className=\"rsssl-locked\">\n                        <div className=\"rsssl-shield-overlay\">\n                              <Icon name = \"shield\"  size=\"80px\"/>\n                        </div>\n                        <div className=\"rsssl-locked-overlay\">\n                            <span className=\"rsssl-progress-status rsssl-learning-mode-enforced\">{__(\"Enforced\",\"really-simple-ssl\")}</span>\n                            {enforcedString}&nbsp;\n                            <a className=\"rsssl-learning-mode-link\" href=\"#\" onClick={ (e) => toggleEnforce(e) }>{__(\"Disable to configure\", \"really-simple-ssl\") }</a>\n                        </div>\n                    </div>}\n                    {learningMode==1 && <div className=\"rsssl-locked\">\n                        <div className=\"rsssl-locked-overlay\">\n                            <span className=\"rsssl-progress-status rsssl-learning-mode\">{__(\"Learning Mode\",\"really-simple-ssl\")}</span>\n                            {configuringString}&nbsp;\n                            <a className=\"rsssl-learning-mode-link\" href=\"#\" onClick={ (e) => toggleLearningMode(e) }>{__(\"Exit\", \"really-simple-ssl\") }</a>\n                        </div>\n                    </div>}\n                    { learningModeCompleted==1 && <div className=\"rsssl-locked\">\n                        <div className=\"rsssl-locked-overlay\">\n                            <span className=\"rsssl-progress-status rsssl-learning-mode-completed\">{__(\"Learning Mode\",\"really-simple-ssl\")}</span>\n                            {__(\"We finished the configuration.\", \"really-simple-ssl\")}&nbsp;\n                            <a className=\"rsssl-learning-mode-link\" href=\"#\" onClick={ (e) => toggleLearningMode(e) }>{__(\"Review the settings and enforce the policy\", \"really-simple-ssl\") }</a>\n                        </div>\n                    </div> }\n                    { rsssl_settings.pro_plugin_active && props.disabled && <div className=\"rsssl-locked \">\n                        <div className=\"rsssl-locked-overlay\">\n                            { !enforcedByThirdparty && <span className=\"rsssl-progress-status rsssl-disabled\">{__(\"Disabled\",\"really-simple-ssl\")}</span> }\n                            { enforcedByThirdparty && <span className=\"rsssl-progress-status rsssl-learning-mode-enforced\">{__(\"Enforced\",\"really-simple-ssl\")}</span> }\n                            { disabledString }\n                        </div>\n                    </div>}\n                  </>\n                  }\n                <Filter />\n            </div>\n            </div>\n        </>\n    )\n}\n\nexport default LearningMode\n","import {create} from 'zustand';\nimport * as rsssl_api from \"../../utils/api\";\n\nconst UseLearningMode = create(( set, get ) => ({\n    learningModeData: [],\n    dataLoaded: false,\n    fetchLearningModeData: async (type) => {\n        let data = {};\n        data.type = type;\n        data.lm_action = 'get';\n        let learningModeData = await rsssl_api.doAction('learning_mode_data', data).then((response) => {\n            return response;\n        })\n        if ( typeof learningModeData === 'object' ) {\n            learningModeData = Object.values(learningModeData);\n        }\n        if ( !Array.isArray(learningModeData) ) {\n            learningModeData = [];\n        }\n        set({\n            learningModeData: learningModeData,\n            dataLoaded:true,\n        });\n    },\n    updateStatus: async (enabled, updateItem, type) => {\n        let learningModeData = get().learningModeData;\n        let data = {};\n        data.type = type;\n        data.updateItemId = updateItem.id;\n        data.enabled = enabled==1 ? 0 : 1;\n        data.lm_action = 'update';\n\n        //for fast UX feel, update the state before we post\n        for (const item of learningModeData){\n            if (updateItem.id === item.id && item.status) {\n                item.status = data.enabled;\n            }\n        }\n        set({\n            learningModeData: learningModeData,\n        });\n        learningModeData = await rsssl_api.doAction('learning_mode_data', data).then((response) => {\n            return response;\n        })\n        if ( typeof learningModeData === 'object' ) {\n            learningModeData = Object.values(learningModeData);\n        }\n        if ( !Array.isArray(learningModeData) ) {\n            learningModeData = [];\n        }\n        set({\n            learningModeData: learningModeData,\n            dataLoaded:true,\n        });\n    },\n    deleteData: async (deleteItem, type) => {\n        let learningModeData = get().learningModeData;\n\n        let data = {};\n        data.type = type;\n        data.updateItemId = deleteItem.id;\n        data.lm_action = 'delete';\n        //for fast UX feel, update the state before we post\n        learningModeData.forEach(function(item, i) {\n            if (item.id === deleteItem.id) {\n                learningModeData.splice(i, 1);\n            }\n        });\n        set({\n            learningModeData: learningModeData,\n        });\n        learningModeData = await rsssl_api.doAction('learning_mode_data', data).then((response) => {\n            return response;\n        })\n        if ( typeof learningModeData === 'object' ) {\n            learningModeData = Object.values(learningModeData);\n        }\n        if ( !Array.isArray(learningModeData) ) {\n            learningModeData = [];\n        }\n        set({\n            learningModeData: learningModeData,\n            dataLoaded:true,\n        });\n    },\n\n}));\n\nexport default UseLearningMode;\n\n\n","import {create} from 'zustand';\nimport * as rsssl_api from \"../../utils/api\";\n\nconst UseMixedContent = create(( set, get ) => ({\n    mixedContentData: [],\n    dataLoaded:false,\n    fixedItemId:false,\n    action:'',\n    nonce:'',\n    completedStatus:'never',\n    progress:0,\n    scanStatus:false,\n    fetchMixedContentData: async () => {\n        set({ scanStatus: 'running' } );\n        const {data, progress, state, action, nonce, completed_status } = await getScanIteration(false);\n        set({\n            scanStatus: state,\n            mixedContentData: data,\n            progress: progress,\n            action: action,\n            nonce: nonce,\n            completedStatus: completed_status,\n            dataLoaded: true,\n        });\n    },\n    start: async () => {\n        const {data, progress, state, action, nonce, completed_status } = await getScanIteration('start');\n        set({\n            scanStatus: state,\n            mixedContentData: data,\n            progress: progress,\n            action: action,\n            nonce: nonce,\n            completedStatus: completed_status,\n            dataLoaded:true,\n        });\n    },\n    runScanIteration: async () => {\n        let currentState = get().scanStatus;\n        if ( currentState==='stop' ) {\n            return;\n        }\n\n        const {data, progress, state, action, nonce, completed_status } = await getScanIteration(currentState);\n        if ( get().scanStatus !== 'stop' ) {\n            set({\n                scanStatus: state,\n                mixedContentData: data,\n                progress: progress,\n                action: action,\n                nonce: nonce,\n                completedStatus: completed_status,\n                dataLoaded:true,\n            });\n        }\n\n\n    },\n    stop: async () => {\n        set({ scanStatus: 'stop' } );\n        const {data, progress, state, action, nonce, completed_status } = await getScanIteration('stop');\n        set({\n            scanStatus: 'stop',\n            mixedContentData: data,\n            progress: progress,\n            action: action,\n            nonce: nonce,\n            completedStatus: completed_status,\n        });\n    },\n    removeDataItem: (removeItem) => {\n        let data = get().mixedContentData;\n        for (const item of data) {\n            if (item.id===removeItem.id){\n                item.fixed = true;\n            }\n        }\n        set({\n            mixedContentData: data,\n        });\n    },\n    ignoreDataItem: (ignoreItem) => {\n        let data = get().mixedContentData;\n        for (const item of data) {\n            if (item.id===ignoreItem.id){\n                item.ignored = true;\n            }\n        }\n        set({\n            mixedContentData: data,\n        });\n    }\n\n\n}));\n\nexport default UseMixedContent;\n\nconst getScanIteration = async (state) => {\n    return await rsssl_api.runTest('mixed_content_scan', state).then((response) => {\n        let data = response.data;\n        if (typeof data === 'object') {\n            data = Object.values(data);\n        }\n        if ( !Array.isArray(data) ) {\n            data = [];\n        }\n        response.data = data;\n        if ( state==='stop' ) {\n            response.state = 'stop';\n        }\n\n        return response;\n    })\n}\n\n","import {useState, useEffect} from \"@wordpress/element\";\nimport {ToggleControl} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport ModalControl from \"../../Modal/ModalControl\";\nimport Icon from \"../../utils/Icon\";\nimport UseMixedContent from \"./MixedContentData\";\nimport useModal from \"../../Modal/ModalData\";\n\nconst MixedContentScan = (props) => {\n    const {fixedItems, ignoredItems} = useModal();\n    const {fetchMixedContentData, mixedContentData, runScanIteration, start, stop, dataLoaded, action, scanStatus, progress, completedStatus, nonce, removeDataItem, ignoreDataItem} = UseMixedContent();\n    const [showIgnoredUrls, setShowIgnoredUrls] = useState(false);\n    const [resetPaginationToggle, setResetPaginationToggle] = useState(false);\n    const [DataTable, setDataTable] = useState(null);\n    const [theme, setTheme] = useState(null);\n    useEffect( () => {\n        import('react-data-table-component').then(({ default: DataTable, createTheme }) => {\n            setDataTable(() => DataTable);\n            setTheme(() => createTheme('really-simple-plugins', {\n                divider: {\n                    default: 'transparent',\n                },\n            }, 'light'));\n        });\n\n    }, []);\n    useEffect( () => {\n        fetchMixedContentData();\n    }, [] );\n\n    useEffect( () => {\n        if (scanStatus==='running') {\n            runScanIteration()\n        }\n    }, [progress, scanStatus] );\n\n    const toggleIgnoredUrls = (e) => {\n        setShowIgnoredUrls(!showIgnoredUrls);\n    }\n\n    let field = props.field;\n    let columns = [];\n    field.columns.forEach(function(item, i) {\n        let newItem = {\n            name: item.name,\n            sortable: item.sortable,\n            grow: item.grow,\n            selector: row => row[item.column],\n            right: !!item.right,\n        }\n        columns.push(newItem);\n    });\n\n    let dataTable = dataLoaded ? mixedContentData : [];\n\n    for (const item of dataTable) {\n        item.warningControl = <span className=\"rsssl-task-status rsssl-warning\">{__(\"Warning\", \"really-simple-ssl\")}</span>\n\n        //check if an item was recently fixed or ignored, and update the table\n        if (fixedItems.includes(item.id)) {\n            item.fixed = true;\n        }\n        if (ignoredItems.includes(item.id)) {\n            item.ignored = true;\n        }\n        //give fix and details the url as prop\n        if ( item.fix ) {\n            item.fix.url = item.blocked_url;\n            item.fix.nonce = nonce;\n        }\n        if (item.details) {\n            item.details.url = item.blocked_url;\n            item.details.nonce = nonce;\n            item.details.ignored = item.ignored;\n        }\n        if (item.location.length > 0) {\n            if (item.location.indexOf('http://') !== -1 || item.location.indexOf('https://') !== -1) {\n                item.locationControl =\n                    <a href={item.location} target=\"_blank\">{__(\"View\", \"really-simple-ssl\")}</a>\n            } else {\n                item.locationControl = item.location;\n            }\n        }\n        item.detailsControl = item.details &&\n            <ModalControl\n                            handleModal={props.handleModal}\n                            item={item}\n                            id={item.id}\n                            btnText={__(\"Details\", \"really-simple-ssl\")}\n                            btnStyle={\"secondary\"}\n                            modalData={item.details}/>;\n        item.fixControl = item.fix &&\n            <ModalControl className={\"button button-primary\"}\n                            handleModal={props.handleModal}\n                            item={item}\n                          id={item.id}\n                          btnText={__(\"Fix\", \"really-simple-ssl\")}\n                            btnStyle={\"primary\"}\n                            modalData={item.fix}/>;\n    }\n\n    if ( !showIgnoredUrls ) {\n        dataTable = dataTable.filter(\n            item => !item.ignored,\n        );\n    }\n\n    //filter also recently fixed items\n    dataTable = dataTable.filter(\n        item => !item.fixed,\n    );\n\n    let progressOutput =progress+'%';\n    let startDisabled = scanStatus === 'running';\n    let stopDisabled = scanStatus !== 'running';\n\n    const customStyles = {\n        headCells: {\n            style: {\n                paddingLeft: '0', // override the cell padding for head cells\n                paddingRight: '0',\n            },\n        },\n        cells: {\n            style: {\n                paddingLeft: '0', // override the cell padding for data cells\n                paddingRight: '0',\n            },\n        },\n    };\n\n    return (\n        <>\n            <div className=\"rsssl-progress-container\">\n                <div className=\"rsssl-progress-bar\" style={{width: progressOutput}} ></div>\n            </div>\n            {scanStatus==='running' && <div className=\"rsssl-current-scan-action\">{action}</div>}\n                {dataTable.length===0 && <>\n                    <div className=\"rsssl-mixed-content-description\">\n                        {scanStatus!=='running' && completedStatus==='never' && __(\"No results. Start your first scan\",\"really-simple-ssl\")}\n                        {scanStatus!=='running' && completedStatus==='completed' && __(\"Everything is now served over SSL\",\"really-simple-ssl\")}\n                    </div>\n                    { (scanStatus ==='running' || completedStatus!=='completed') && <div className=\"rsssl-mixed-content-placeholder\">\n                             <div></div><div></div><div></div>\n                    </div>\n                    }\n                    { scanStatus!=='running' && completedStatus==='completed' && <div className=\"rsssl-shield-overlay\">\n                          <Icon name = \"shield\"  size=\"80px\"/>\n                    </div> }\n                    </>}\n                { dataTable.length>0 && <div className={'rsssl-mixed-content-datatable'}><DataTable\n                    columns={columns}\n                    data={dataTable}\n                    dense\n                    pagination\n                    paginationResetDefaultPage={resetPaginationToggle} // optionally, a hook to reset pagination to page 1\n                    noDataComponent={__(\"No results\", \"really-simple-ssl\")} //or your component\n                    theme={theme}\n                    customStyles={customStyles}\n                /></div>  }\n            <div className=\"rsssl-grid-item-content-footer\">\n                <button className=\"button\" disabled={startDisabled} onClick={ () => start() }>{__(\"Start scan\",\"really-simple-ssl\")}</button>\n                <button className=\"button\" disabled={stopDisabled} onClick={ () => stop() }>{__(\"Stop\",\"really-simple-ssl\")}</button>\n                <ToggleControl\n                    checked= { showIgnoredUrls==1 }\n                    onChange={ (e) => toggleIgnoredUrls(e) }\n                />\n                <label>{__('Show ignored URLs', 'really-simple-ssl')}</label>\n            </div>\n\n        </>\n    )\n\n}\n\nexport default MixedContentScan;\n","const Password = (props) => {\n    const onChangeHandler = (fieldValue) => {\n        props.fields[props.index]['value'] = fieldValue;\n        props.saveChangedFields( props.field.id )\n    }\n\n    /**\n     * There is no \"PasswordControl\" in WordPress react yet, so we create our own license field.\n     */\n    return (\n        <div className=\"components-base-control\">\n         <div className=\"components-base-control__field\">\n             <label\n                 className=\"components-base-control__label\"\n                 htmlFor={props.field.id}>{props.field.label}</label>\n             <input className=\"components-text-control__input\"\n                    type=\"password\"\n                    id={props.field.id}\n                    value={props.field.value}\n                    onChange={ ( e ) => onChangeHandler(e.target.value) }\n             />\n         </div>\n        </div>\n    );\n}\n\nexport default Password;","import {\n    SelectControl,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport {useState,useEffect} from '@wordpress/element';\nimport Icon from \"../utils/Icon\";\nimport useFields from \"./FieldsData\";\n\nconst PermissionsPolicy = (props) => {\n    const {fields, updateField, updateSubField, setChangedField, saveFields} = useFields();\n    const [enablePermissionsPolicy, setEnablePermissionsPolicy] = useState(0);\n    const [DataTable, setDataTable] = useState(null);\n    const [theme, setTheme] = useState(null);\n    useEffect( () => {\n        import('react-data-table-component').then(({ default: DataTable, createTheme }) => {\n            setDataTable(() => DataTable);\n            setTheme(() => createTheme('really-simple-plugins', {\n                divider: {\n                    default: 'transparent',\n                },\n            }, 'light'));\n        });\n\n    }, []);\n\n    useEffect( () => {\n        let field = fields.filter(field => field.id === 'enable_permissions_policy')[0];\n        setEnablePermissionsPolicy(field.value);\n    }, [] );\n\n    const onChangeHandler = (value, clickedItem ) => {\n        let field= props.field;\n        if (typeof field.value === 'object') {\n            updateField(field.id, Object.values(field.value))\n        }\n\n        //the updateItemId allows us to update one specific item in a field set.\n        updateSubField(field.id, clickedItem.id, value);\n        setChangedField(field.id, value);\n        saveFields(true, false);\n    }\n\n    const togglePermissionsPolicyStatus = (e, enforce) => {\n         e.preventDefault();\n        //look up permissions policy enable field //enable_permissions_policy\n        let field = fields.filter(field => field.id === 'enable_permissions_policy')[0];\n        //enforce setting\n        setEnablePermissionsPolicy(enforce);\n        updateField(field.id, enforce);\n        setChangedField(field.id, field.value);\n        saveFields(true, false);\n    }\n\n    let field = props.field;\n    let fieldValue = field.value;\n    let options = props.options;\n\n    columns = [];\n    field.columns.forEach(function(item, i) {\n        let newItem = {\n            name: item.name,\n            sortable: item.sortable,\n            width: item.width,\n            selector: row => row[item.column],\n        }\n        columns.push(newItem);\n    });\n    let data = field.value;\n    if (typeof data === 'object') {\n        data = Object.values(data);\n    }\n    if (!Array.isArray(data) ) {\n        data = [];\n    }\n    let disabled = false;\n    let outputData = [];\n    for (const item of data){\n        let itemCopy = {...item};\n        itemCopy.valueControl = <SelectControl\n            help=''\n            value={item.value}\n            disabled={disabled}\n            options={options}\n            label=''\n            onChange={ ( fieldValue ) => onChangeHandler( fieldValue, item, 'value' ) }\n        />\n        outputData.push(itemCopy);\n    }\n\n    const customStyles = {\n        headCells: {\n            style: {\n                paddingLeft: '0', // override the cell padding for head cells\n                paddingRight: '0',\n            },\n        },\n        cells: {\n            style: {\n                paddingLeft: '0', // override the cell padding for data cells\n                paddingRight: '0',\n            },\n        },\n    };\n\n    if (!DataTable || !theme) return null;\n\n    return (\n        <div className={ props.highLightClass}>\n                <DataTable\n                    columns={columns}\n                    data={outputData}\n                    dense\n                    pagination={false}\n                    customStyles={customStyles}\n                    theme={theme}\n                />\n                { enablePermissionsPolicy!=1 && <button className=\"button button-primary\" onClick={ (e) => togglePermissionsPolicyStatus(e, true ) }>{__(\"Enforce\",\"really-simple-ssl\")}</button> }\n                { enablePermissionsPolicy==1 && <div className=\"rsssl-locked\">\n                    <div className=\"rsssl-shield-overlay\">\n                        <Icon name = \"shield\"  size=\"80px\"/>\n                    </div>\n                    <div className=\"rsssl-locked-overlay\">\n                        <span className=\"rsssl-progress-status rsssl-learning-mode-enforced\">{__(\"Enforced\",\"really-simple-ssl\")}</span>\n                        { props.disabled && <>{ __(\"Permissions Policy is set outside Really Simple SSL.\", \"really-simple-ssl\")}&nbsp;</>}\n                        { !props.disabled && <>{__(\"Permissions Policy is enforced.\", \"really-simple-ssl\")}&nbsp;</>}\n                        { !props.disabled && <a className=\"rsssl-learning-mode-link\" href=\"#\" onClick={ (e) => togglePermissionsPolicyStatus(e, false) }>{__(\"Disable\", \"really-simple-ssl\") }</a> }\n                    </div>\n                </div>}\n                { props.disabled && enablePermissionsPolicy!=1 && <div className=\"rsssl-locked\">\n                    <div className=\"rsssl-locked-overlay\">\n                        <span className=\"rsssl-progress-status rsssl-disabled\">{__(\"Disabled\",\"really-simple-ssl\")}</span>\n                        {__(\"The Permissions Policy has been disabled.\", \"really-simple-ssl\")}\n                    </div>\n                </div>}\n        </div>\n    )\n}\n\n\nexport default PermissionsPolicy","/**\n * This file contains the PostDropdown component.\n *\n * This component displays a dropdown menu that allows the user to select a post\n * from a list of posts fetched from the WordPress database. The selected post\n * is then used to set a value in an options array stored in the WordPress\n * database. The component also allows the user to search for posts by typing\n * in a search box.\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { __ } from '@wordpress/i18n';\nimport TextField from '@material-ui/core/TextField';\nimport apiFetch from '@wordpress/api-fetch';\nimport useFields from \"./FieldsData\";\n\nconst PostDropdown = ({ field }) => {\n    const [posts, setPosts] = useState([]);\n    const [selectedPost, setSelectedPost] = useState(\"\");\n    const {updateField, setChangedField} = useFields();\n    const [ThemeProvider, setThemeProvider] = useState(null);\n    const [theme, setTheme] = useState(null);\n    const [Autocomplete, setAutocomplete] = useState(null);\n    useEffect( () => {\n        import('@material-ui/lab/Autocomplete').then(({ default: Autocomplete }) => {\n            setAutocomplete(() => Autocomplete);\n        });\n\n       import ('@material-ui/core/styles').then(({ createTheme,  ThemeProvider }) => {\n           setThemeProvider(() => ThemeProvider);\n            setTheme(() => createTheme({\n                    typography: {\n                        fontSize: 12,\n                        fontFamily: 'inherit',\n                    },\n                    overrides: {\n                        MuiInputBase: {\n                            root: {\n                                fontSize: '12px',\n                                fontFamily: 'inherit',\n                                height: '40px',\n                            }\n                        },\n                        MuiList: {\n                            root: {\n                                fontSize: '8px',\n                            }\n                        },\n                        MuiAutocomplete: {\n                            inputRoot: {\n                                '& .MuiAutocomplete-input': {\n                                    padding: '0 !important',\n                                    border: 0,\n                                },\n                                flexWrap: 'inherit',\n                            },\n                            popper: {\n                                fontSize: '12px',\n                            },\n                            paper: {\n                                fontSize: '12px',\n                            },\n                            option: {\n                                fontSize: '12px',\n                            },\n                            root: {\n                                padding: 0,\n                            }\n                        },\n                    },\n                })\n            );\n       });\n\n    }, []);\n\n    // Fetch the list of posts from the WordPress database when the component mounts.\n    useEffect(() => {\n        apiFetch({ path: '/wp/v2/pages?per_page=100' })\n            .then((data) => {\n                const formattedData = data.map(post => ({\n                    title: post.title.rendered,\n                    id: post.id\n                }));\n                setPosts([{ 'title': \"404 (default)\", 'id': \"404_default\" }, ...formattedData]);\n            });\n    }, []);\n\n    // Fetch the data for the selected post from the WordPress database when the component mounts.\n    useEffect(() => {\n        if (field.value !== '404_default') {\n            apiFetch({ path: `wp/v2/pages/${field.value}` })\n                .then((data) => {\n                    if (data.title) {\n                        setSelectedPost({ 'title': data.title.rendered, 'id': field.value })\n                    } else {\n                        setSelectedPost({ 'title': \"404 (default)\", 'id': '404_default' })\n                    }\n                });\n        } else {\n            setSelectedPost({ 'title': \"404 (default)\", 'id': '404_default' })\n        }\n    }, [field.value]);\n\n\n    if (!Autocomplete || !ThemeProvider || !theme) {\n        return null;\n    }\n\n    return (\n        <div>\n            <label htmlFor=\"rsssl-filter-post-input\">\n                {__(\"Redirect to this post when someone tries to access /wp-admin or /wp-login.php. The default is a 404 page.\",\"really-simple-ssl\")}\n            </label>\n            <ThemeProvider theme={theme}>\n                <Autocomplete\n                    options={posts}\n                    getOptionLabel={(option) => option.title ? option.title : ''}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            variant=\"outlined\"\n                            placeholder={__('Search for a post.','really-simple-ssl')}\n                        />\n                    )}\n                    getOptionSelected={(option, value) => {\n                        return option.id === value.id;\n                    }}\n                    onChange={(event, newValue) => {\n                        let value = newValue && newValue.id ? newValue.id : '404_default';\n                        updateField(field.id, value);\n                        setChangedField( field.id, value );\n                    }}\n                    value={selectedPost}\n                />\n            </ThemeProvider>\n        </div>\n    );\n};\n\nexport default PostDropdown;","import * as rsssl_api from \"../../utils/api\";\nimport useFields from \"../FieldsData\";\nimport {__} from \"@wordpress/i18n\";\nimport {useEffect, useState} from \"react\";\nimport useRiskData from \"./RiskData\";\n\nconst NotificationTester = (props) => {\n    const {\n        fetchVulnerabilities,riskLevels\n    } = useRiskData();\n    const {field} = props;\n    const [disabled, setDisabled] = useState(true);\n    const [mailNotificationsEnabled, setMailNotificationsEnabled] = useState(true);\n    const [vulnerabilitiesEnabled, setVulnerabilitiesEnabled] = useState(false);\n    const [vulnerabilitiesSaved, setVulnerabilitiesSaved] = useState(false);\n    const {addHelpNotice, fields, getFieldValue, updateField, setChangedField, fieldAlreadyEnabled, fetchFieldsData, updateFieldAttribute} = useFields();\n    useEffect ( () => {\n        let mailEnabled = getFieldValue('send_notifications_email') == 1;\n        let vulnerabilities = fieldAlreadyEnabled('enable_vulnerability_scanner');\n        setMailNotificationsEnabled(mailEnabled);\n        let enableButton = mailEnabled && vulnerabilities;\n        setDisabled(!enableButton);\n        setMailNotificationsEnabled(mailEnabled);\n        setVulnerabilitiesSaved(vulnerabilities);\n        setVulnerabilitiesEnabled(getFieldValue('enable_vulnerability_scanner') == 1)\n    },[fields])\n\n    const doTestNotification = async () => {\n        //Test the notifications\n        setDisabled(true);\n        rsssl_api.doAction( 'vulnerabilities_test_notification' ).then( () => {\n            setDisabled(false);\n            fetchFieldsData('vulnerabilities');\n            fetchVulnerabilities();\n            addHelpNotice(\n                field.id,\n                'success',\n                __('All notifications are triggered successfully, please check your email to double-check if you can receive emails.','really-simple-ssl'),\n                __('Test notifications','really-simple-ssl'),\n                false\n            );\n        });\n    }\n\n    //ensure that risk levels are enabled cascading\n    useEffect( () => {\n        let dashboardRiskLevel = getFieldValue('vulnerability_notification_dashboard');\n        dashboardRiskLevel = riskLevels.hasOwnProperty(dashboardRiskLevel) ? riskLevels[dashboardRiskLevel] : 0;\n        // let siteWideRiskLevel = getFieldValue('vulnerability_notification_sitewide');\n        //the sitewide risk level should be at least as high as the dashboard risk level. Disable lower risk levels in sitewide\n        //create an array of ints from 1 to dashboardRiskLevel, we drop the * from the array\n        let priorDashboardRiskLevel = dashboardRiskLevel>0 ? dashboardRiskLevel-1 :dashboardRiskLevel;\n        let dashboardRiskLevels = Array.from(Array(priorDashboardRiskLevel).keys()).map(x => x );\n        //convert these integers back to risk levels\n        //find the integer value in the riskLevels object, and return the key\n        dashboardRiskLevels = dashboardRiskLevels.map( (level) => {\n            return Object.keys(riskLevels).find(key => riskLevels[key] === level  );\n        });\n\n        if (dashboardRiskLevels.length > 0) {\n            updateFieldAttribute('vulnerability_notification_sitewide', 'disabled', dashboardRiskLevels);\n            //if the current value is below the dashboardRisk Level, set it to the dashboardRiskLevel\n            let siteWideRiskLevel = getFieldValue('vulnerability_notification_sitewide');\n            siteWideRiskLevel = riskLevels.hasOwnProperty(siteWideRiskLevel) ? riskLevels[siteWideRiskLevel] : 0;\n            if (siteWideRiskLevel<dashboardRiskLevel) {\n                let newRiskLevel = Object.keys(riskLevels).find(key => riskLevels[key] === dashboardRiskLevel  );\n                updateField('vulnerability_notification_sitewide', newRiskLevel);\n                setChangedField('vulnerability_notification_sitewide', newRiskLevel);\n            }\n        } else {\n            updateFieldAttribute('vulnerability_notification_sitewide', 'disabled', false);\n        }\n    },[getFieldValue('vulnerability_notification_dashboard')])\n\n    let fieldCopy = {...field};\n    if (!mailNotificationsEnabled) {\n        fieldCopy.tooltip = __('You have not enabled the email notifications in the general settings.','really-simple-ssl');\n        fieldCopy.warning = true;\n    } else if (vulnerabilitiesEnabled && !vulnerabilitiesSaved) {\n        fieldCopy.tooltip = __('The notification test only works if you save the setting first.','really-simple-ssl');\n        fieldCopy.warning = true;\n    }\n    return (\n        <>\n            <label>{props.labelWrap(fieldCopy)}</label>\n            <button onClick={ () => doTestNotification()} disabled={ disabled } className=\"button button-default\">{field.button_text}</button>\n        </>\n    )\n}\n\nexport default NotificationTester","/* Creates A Store For Risk Data using Zustand */\nimport {create} from 'zustand';\nimport * as rsssl_api from \"../../utils/api\";\nimport {__} from \"@wordpress/i18n\";\nimport {produce} from \"immer\";\nimport React from \"react\";\nconst UseRiskData = create((set, get) => ({\n    dummyRiskData: [\n        {id:'force_update',name:'Force Update',value:'l',description:__('Force update the plugin or theme','really-simple-ssl')},\n        {id:'quarantine',name:'Quarantine',value:'m',description:__('Isolates the plugin or theme if no update can be performed','really-simple-ssl')},\n    ],\n    riskData:[],\n    riskLevels: {\n        l: 1,\n        m: 2,\n        h: 3,\n        c: 4,\n    },\n    vulnerabilities: [],\n    processing:false,\n    dataLoaded: false,\n    // Stuff we need for the WPVulData component\n    updates: 0, //for letting the component know if there are updates available\n    HighestRisk: false, //for storing the highest risk\n    lastChecked: '', //for storing the last time the data was checked\n    vulEnabled: false, //for storing the status of the vulnerability scan\n    riskNaming: {}, //for storing the risk naming\n    introCompleted: false, //for storing the status of the first run\n    vulList: [], //for storing the list of vulnerabilities\n    setDataLoaded: (value) => set({dataLoaded: value}),\n    //update Risk Data\n    updateRiskData: async (field, value) => {\n        set({processing:true});\n        set(\n            produce((state) => {\n                let index = state.riskData.findIndex((item) => item.id === field);\n                state.riskData[index].value = value;\n            })\n        );\n        try {\n            const riskData = await rsssl_api.doAction('vulnerabilities_measures_set', {\n                field: field,\n                value: value,\n            });\n            set({riskData: riskData.data, dataLoaded: true, processing:false});\n        } catch (e) {\n            console.log(e);\n        }\n    },\n\n    setIntroCompleted: (value) => {\n        set({introCompleted: value});\n    },\n\n    capitalizeFirstLetter: (str) => {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    fetchFirstRun: async () => {\n        await rsssl_api.doAction('vulnerabilities_scan_files');\n    },\n\n    /*\n    * Functions\n     */\n    fetchVulnerabilities: async () => {\n        let data = {};\n        try {\n            const fetched = await rsssl_api.doAction('hardening_data', data);\n            let vulList = [];\n            let vulnerabilities = 0;\n            if (fetched.data.vulList) {\n                vulnerabilities = fetched.data.vulnerabilities;\n                vulList = fetched.data.vulList;\n                if (typeof vulList === 'object') {\n                    //we make it an array\n                    vulList = Object.values(vulList);\n                }\n                vulList.forEach(function (item, i) {\n                    item.vulnerability_action = <div className=\"rsssl-vulnerability-action\">\n                        <a className=\"button\" href={\"https://really-simple-ssl.com/vulnerabilities/\" + item.rss_identifier}\n                           target={\"_blank\"}>{__(\"Details\", \"really-simple-ssl\")}</a>\n                        <a disabled={!item.update_available} href={rsssl_settings.plugins_url + \"?plugin_status=upgrade\"}\n                           className=\"button button-primary\"\n                        >{__(\"Update\", \"really-simple-ssl\")}</a>\n                    </div>\n                });\n            }\n            let riskData = fetched.data.riskData;\n            if (!Array.isArray(riskData)) {riskData = []}\n            set(\n                produce((state) => {\n                    state.vulnerabilities = vulnerabilities;\n                    state.vulList = vulList;\n                    state.updates = fetched.data.updates;\n                    state.dataLoaded = true;\n                    state.riskNaming = fetched.data.riskNaming;\n                    state.lastChecked = fetched.data.lastChecked;\n                    state.vulEnabled = fetched.data.vulEnabled;\n                    state.riskData = riskData;\n                })\n            )\n        } catch (e) {\n            console.error(e);\n        }\n    },\n\n    vulnerabilityCount: () => {\n        let vuls = get().vulList;\n        //we group the data by risk level\n        //first we make vuls an array\n        let vulsArray = [];\n        Object.keys(vuls).forEach(function (key) {\n            vulsArray.push(vuls[key]);\n        });\n        let riskLevels = ['c', 'h', 'm', 'l'];\n        //we count the amount of vulnerabilities per risk level\n        return riskLevels.map(function (level) {\n            return {\n                level: level,\n                count: vulsArray.filter(function (vul) {\n                    return vul.risk_level === level;\n                }).length\n            };\n        });\n    },\n\n    vulnerabilityScore: () => {\n        let score = 0;\n        let vulnerabilitiesList = get().vulList;\n\n        Object.keys(vulnerabilitiesList).forEach(function (key) {\n            //if there are vulnerabilities with critical severity, score is 5\n            if (vulnerabilitiesList[key].risk_level === 'c') {\n                score = 5;\n            } else if (score < 1) {\n                score = 1;\n            }\n        });\n        return score;\n    },\n\n    hardeningScore: () => {\n        let score = 0;\n        let vulnerabilitiesList = get().vulnerabilities;\n        for (let i = 0; i < vulnerabilitiesList.length; i++) {\n            score += vulnerabilitiesList[i].hardening_score;\n        }\n        return score;\n    },\n\n    activateVulnerabilityScanner: async () => {\n        let data = {};\n        try {\n            const fetched = await rsssl_api.doAction('rsssl_scan_files');\n            if (fetched.request_success) {\n                //we get the data again\n                const run = async () => {\n                    await get().fetchVulnerabilities();\n                }\n                run();\n            }\n\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}));\n\nexport default UseRiskData;\n","/*\n* The native selectControl doesn't allow disabling per option.\n*/\n\nconst SelectControl = (props) => {\n    let field = props.field;\n    let selectDisabled = !Array.isArray(props.disabled) && props.disabled;\n    let optionsDisabled = Array.isArray(props.disabled) ? props.disabled : false;\n    return (\n        <>\n            <div className=\"components-base-control\">\n                <div className=\"components-base-control__field\">\n                    <div data-wp-component=\"HStack\" className=\"components-flex components-select-control\">\n                        <label htmlFor={field.id} className=\"components-toggle-control__label\">{props.label}</label>\n                        <select disabled={selectDisabled} value={props.value} onChange={(e) => props.onChangeHandler(e.target.value)}>\n                            {props.options.map((option,i) => <option key={i} value={option.value} disabled={optionsDisabled && optionsDisabled.includes(option.value)}>{option.label}</option>) }\n                        </select>\n                    </div>\n                </div>\n            </div>\n            {field.comment && <div className=\"rsssl-comment\" dangerouslySetInnerHTML={{__html:field.comment}}></div>}\n        </>\n    );\n}\nexport default SelectControl","import {Button, TextareaControl,} from '@wordpress/components';\nimport {__} from '@wordpress/i18n';\nimport * as rsssl_api from \"../utils/api\";\nimport {useState} from \"@wordpress/element\";\n\nconst Support = () => {\n    const [message, setMessage] = useState('');\n    const [sending, setSending] = useState(false);\n\n    const onChangeHandler = (message) => {\n        setMessage(message);\n    }\n\n    const onClickHandler = () => {\n        setSending(true);\n        return rsssl_api.runTest('supportData', 'refresh').then( ( response ) => {\n            let encodedMessage = message.replace(/(?:\\r\\n|\\r|\\n)/g, '--br--');\n            let url = 'https://really-simple-ssl.com/support'\n            +'?customername=' + encodeURIComponent(response.customer_name)\n            + '&email=' + response.email\n            + '&domain=' + response.domain\n            + '&scanresults=' + encodeURIComponent(response.scan_results)\n            + '&licensekey=' + encodeURIComponent(response.license_key)\n            + '&supportrequest=' + encodeURIComponent(encodedMessage)\n            + '&htaccesscontents=' + response.htaccess_contents\n            + '&debuglog=' + response.system_status;\n            window.location.assign(url);\n        });\n    }\n\n    let disabled = sending || message.length===0;\n    return (\n        <>\n            <TextareaControl\n                    disabled={sending}\n                    placeholder={__(\"Type your question here\",\"really-simple-ssl\")}\n                    onChange={ ( message ) => onChangeHandler(message) }\n            />\n            <Button\n                disabled={disabled}\n                variant=\"secondary\"\n                onClick={ ( e ) => onClickHandler(e) }>\n                { __( 'Send', 'really-simple-ssl' ) }\n            </Button>\n        </>\n    );\n\n}\n\nexport default Support;"],"names":["Onboarding","Activate","createElement","className","__","rsssl_api","dispatch","useUpdateEffect","sleeper","Hyperlink","Button","useLetsEncryptData","useFields","Directories","props","addHelpNotice","action","status","field","id","Fragment","handleSwitchToDNS","updateField","runLetsEncryptTest","then","response","selectMenu","notice","createNotice","__unstableHTML","type","isDismissible","removeNotice","variant","onClick","rsssl_settings","hosting_dashboard","target","text","url","useState","useEffect","useMenu","DnsVerification","fields","setChangedField","saveFields","fetchFieldsData","getFieldValue","selectedSubMenuItem","tokens","setTokens","newTokens","output","length","handleSwitchToDir","verificationType","map","tokenData","i","domain","token","Generation","handleSkipDNS","restartTests","Installation","installationData","setInstallationData","generated_by_rsssl","handleCopyAction","success","data","document","querySelector","innerText","el","value","body","appendChild","select","execCommand","e","removeChild","certificate_content","href","download_url","key_content","ca_bundle_content","useRef","Icon","LetsEncrypt","handleNextButtonDisabled","attemptCount","setAttemptCount","progress","setProgress","maxAttempts","setMaxAttempts","refreshTests","setRefreshTests","sleep","intervalId","lastActionStatus","actionIndex","previousActionIndex","startedTests","actionsList","maxIndex","refProgress","reset","getActions","propActions","actions","adjustActionsForDNS","current","runTest","setInterval","do","forEach","updateActionProperty","index","property","currentActions","hasOwnProperty","statuses","verification_type","dnsVerificationAdded","create_bundle_index","createBundleAction","newAction","description","attempts","push","processTestResult","clearInterval","Number","isInteger","event","CustomEvent","detail","dispatchEvent","next","currentAction","test","includes","startTime","Date","endTime","timeDiff","elapsedTime","Math","round","hide","message","getStyles","Object","assign","width","getStatusIcon","icon","getStatusColor","color","progressBarColor","actionsOutput","filter","style","key","name","replace","dangerouslySetInnerHTML","__html","useModal","ModalControl","handleModal","onClickHandler","modalData","item","btnStyle","btnText","ToggleControl","Placeholder","useOnboardingData","useRiskData","updateFieldsData","fetchVulnerabilities","dismissModal","actionHandler","getSteps","error","certificateValid","networkwide","sslEnabled","dataLoaded","processing","setProcessing","steps","currentStep","currentStepIndex","setCurrentStepIndex","overrideSSL","setOverrideSSL","networkActivationStatus","setNetworkActivationStatus","networkProgress","refreshSSLStatus","activateSSLNetworkWide","email","setEmail","saveEmail","includeTips","setIncludeTips","sendTestEmail","setSendTestEmail","setSelectedMainMenuItem","selectedMainMenuItem","run","items","hardeningItem","find","activateSSL","site_url_changed","window","location","reload","parseStepItems","title","current_action","button","read_more","statusIcon","is_plugin","statusColor","buttonTitle","showLink","showAsPlugin","isPluginClass","isLink","goToDashboard","isModal","goToLetsEncrypt","letsencrypt_url","saveEmailAndUpdateFields","controlButtons","ActivateSSLText","disabled","pro_plugin_active","upgrade_link","label","checked","onChange","doAction","lines","step","processingClass","placeholder","info_text","button_text","CheckboxControl","onChangeHandler","fieldValue","handleKeyDown","preventDefault","is_checked","is_disabled","onKeyDown","htmlFor","TextControl","RadioControl","TextareaControl","__experimentalNumberControl","NumberControl","License","Password","SelectControl","Host","MixedContentScan","PermissionsPolicy","Support","LearningMode","RiskComponent","VulnerabilitiesOverview","PostDropdown","NotificationTester","Field","scrollAnchor","React","createRef","highLightField","scrollIntoView","behavior","block","configureFieldCondition","configure_on_activation","condition","configureField","fieldId","labelWrap","tooltipColor","warning","tooltip","highLightClass","options","networkwide_active","networkwide_required","comment","network_link","conditionallyDisabled","visible","ref","selected","required","help","useLearningMode","ChangeStatus","updateStatus","statusClass","Delete","deleteData","focusable","role","xmlns","viewBox","height","fill","d","getField","fetchLearningModeData","learningModeData","enforcedByThirdparty","setEnforcedByThirdparty","enforce","setEnforce","learningMode","setLearningMode","learningModeCompleted","setLearningModeCompleted","hasError","setHasError","lmEnabledOnce","setLmEnabledOnce","filterValue","setFilterValue","controlField","setControlField","DataTable","setDataTable","theme","setTheme","_ref","default","createTheme","divider","conditionalRowStyles","when","row","classNames","customStyles","headCells","paddingLeft","paddingRight","cells","control_field","enforced_by_thirdparty","toggleEnforce","enforceValue","controlFieldValue","toggleLearningMode","lmEnabledOnceField","Filter","configuringString","disabledString","enforcedString","enforceDisabled","columns","newItem","sortable","selector","column","login_status","login_statusControl","statusControl","deleteControl","dense","pagination","noDataComponent","persistTableHead","size","create","UseLearningMode","set","get","lm_action","values","Array","isArray","enabled","updateItem","updateItemId","deleteItem","splice","UseMixedContent","mixedContentData","fixedItemId","nonce","completedStatus","scanStatus","fetchMixedContentData","state","completed_status","getScanIteration","start","runScanIteration","currentState","stop","removeDataItem","removeItem","fixed","ignoreDataItem","ignoreItem","ignored","fixedItems","ignoredItems","showIgnoredUrls","setShowIgnoredUrls","resetPaginationToggle","setResetPaginationToggle","toggleIgnoredUrls","grow","right","dataTable","warningControl","fix","blocked_url","details","indexOf","locationControl","detailsControl","fixControl","progressOutput","startDisabled","stopDisabled","paginationResetDefaultPage","saveChangedFields","updateSubField","enablePermissionsPolicy","setEnablePermissionsPolicy","clickedItem","togglePermissionsPolicyStatus","outputData","itemCopy","valueControl","TextField","apiFetch","posts","setPosts","selectedPost","setSelectedPost","ThemeProvider","setThemeProvider","Autocomplete","setAutocomplete","_ref2","_ref3","typography","fontSize","fontFamily","overrides","MuiInputBase","root","MuiList","MuiAutocomplete","inputRoot","padding","border","flexWrap","popper","paper","option","path","formattedData","post","rendered","getOptionLabel","renderInput","params","_extends","getOptionSelected","newValue","riskLevels","setDisabled","mailNotificationsEnabled","setMailNotificationsEnabled","vulnerabilitiesEnabled","setVulnerabilitiesEnabled","vulnerabilitiesSaved","setVulnerabilitiesSaved","fieldAlreadyEnabled","updateFieldAttribute","mailEnabled","vulnerabilities","enableButton","doTestNotification","dashboardRiskLevel","priorDashboardRiskLevel","dashboardRiskLevels","from","keys","x","level","siteWideRiskLevel","newRiskLevel","fieldCopy","produce","UseRiskData","dummyRiskData","riskData","l","m","h","c","updates","HighestRisk","lastChecked","vulEnabled","riskNaming","introCompleted","vulList","setDataLoaded","updateRiskData","findIndex","console","log","setIntroCompleted","capitalizeFirstLetter","str","charAt","toUpperCase","slice","fetchFirstRun","fetched","vulnerability_action","rss_identifier","update_available","plugins_url","vulnerabilityCount","vuls","vulsArray","count","vul","risk_level","vulnerabilityScore","score","vulnerabilitiesList","hardeningScore","hardening_score","activateVulnerabilityScanner","request_success","selectDisabled","optionsDisabled","setMessage","sending","setSending","encodedMessage","encodeURIComponent","customer_name","scan_results","license_key","htaccess_contents","system_status"],"sourceRoot":""}